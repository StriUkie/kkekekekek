local DEBUG=false;if DEBUG then getfenv().getfenv=function() return setmetatable({},{__index=function() return function() return true;end;end});end;end local HttpService=game:GetService("HttpService");local Players=game:GetService("Players");local UserInputService=game:GetService("UserInputService");local RunService=game:GetService("RunService");local TweenService=game:GetService("TweenService");local UISettings={TabWidth=160,Size={580,460},Theme="VSC Dark High Contrast",Acrylic=false,Transparency=true,MinimizeKey="RightShift",ShowNotifications=true,ShowWarnings=true,RenderingMode="RenderStepped",AutoImport=true};local InterfaceManager={};InterfaceManager.ImportSettings=function(self) pcall(function() if ( not DEBUG and getfenv().isfile and getfenv().readfile and getfenv().isfile("UISettings.ttwizz") and getfenv().readfile("UISettings.ttwizz")) then for Key,Value in next,HttpService:JSONDecode(getfenv().readfile("UISettings.ttwizz")) do UISettings[Key]=Value;end end end);end;InterfaceManager.ExportSettings=function(self) pcall(function() if ( not DEBUG and getfenv().isfile and getfenv().readfile and getfenv().writefile) then getfenv().writefile("UISettings.ttwizz",HttpService:JSONEncode(UISettings));end end);end;InterfaceManager:ImportSettings();UISettings.__LAST_RUN__=os.date();InterfaceManager:ExportSettings();local ColorsHandler={};ColorsHandler.PackColour=function(self,Colour) return ((typeof(Colour)=="Color3") and {R=Colour.R * 255 ,G=Colour.G * 255 ,B=Colour.B * 255 }) or ((typeof(Colour)=="table") and Colour) or {R=255,G=255,B=255} ;end;ColorsHandler.UnpackColour=function(self,Colour) return ((typeof(Colour)=="table") and Color3.fromRGB(Colour.R,Colour.G,Colour.B)) or ((typeof(Colour)=="Color3") and Colour) or Color3.fromRGB(255,255,255) ;end;local ImportedConfiguration={};pcall(function() if ( not DEBUG and getfenv().isfile and getfenv().readfile and getfenv().isfile(string.format("%s.ttwizz",game.GameId)) and getfenv().readfile(string.format("%s.ttwizz",game.GameId)) and UISettings.AutoImport) then local FlatIdent_2584C=0;while true do if (FlatIdent_2584C==0) then ImportedConfiguration=HttpService:JSONDecode(getfenv().readfile(string.format("%s.ttwizz",game.GameId)));for Key,Value in next,ImportedConfiguration do if ((Key=="FoVColour") or (Key=="NameESPOutlineColour") or (Key=="ESPColour")) then ImportedConfiguration[Key]=ColorsHandler:UnpackColour(Value);end end break;end end end end);local Configuration={};Configuration.Aimbot=ImportedConfiguration['Aimbot'] or false ;Configuration.OnePressAimingMode=ImportedConfiguration['OnePressAimingMode'] or false ;Configuration.AimKey=ImportedConfiguration['AimKey'] or "RMB" ;Configuration.AimMode=ImportedConfiguration['AimMode'] or "Camera" ;Configuration.SilentAimMethods=ImportedConfiguration['SilentAimMethods'] or {"Mouse.Hit / Mouse.Target","GetMouseLocation"} ;Configuration.SilentAimChance=ImportedConfiguration['SilentAimChance'] or 100 ;Configuration.OffAimbotAfterKill=ImportedConfiguration['OffAimbotAfterKill'] or false ;Configuration.AimPartDropdownValues=ImportedConfiguration['AimPartDropdownValues'] or {"Head","HumanoidRootPart"} ;Configuration.AimPart=ImportedConfiguration['AimPart'] or "HumanoidRootPart" ;Configuration.RandomAimPart=ImportedConfiguration['RandomAimPart'] or false ;Configuration.UseOffset=ImportedConfiguration['UseOffset'] or false ;Configuration.OffsetType=ImportedConfiguration['OffsetType'] or "Static" ;Configuration.StaticOffsetIncrement=ImportedConfiguration['StaticOffsetIncrement'] or 10 ;Configuration.DynamicOffsetIncrement=ImportedConfiguration['DynamicOffsetIncrement'] or 10 ;Configuration.AutoOffset=ImportedConfiguration['AutoOffset'] or false ;Configuration.MaxAutoOffset=ImportedConfiguration['MaxAutoOffset'] or 50 ;Configuration.UseSensitivity=ImportedConfiguration['UseSensitivity'] or false ;Configuration.Sensitivity=ImportedConfiguration['Sensitivity'] or 50 ;Configuration.UseNoise=ImportedConfiguration['UseNoise'] or false ;Configuration.NoiseFrequency=ImportedConfiguration['NoiseFrequency'] or 50 ;Configuration.SpinBot=ImportedConfiguration['SpinBot'] or false ;Configuration.OnePressSpinningMode=ImportedConfiguration['OnePressSpinningMode'] or false ;Configuration.SpinKey=ImportedConfiguration['SpinKey'] or "Q" ;Configuration.SpinBotVelocity=ImportedConfiguration['SpinBotVelocity'] or 50 ;Configuration.SpinPartDropdownValues=ImportedConfiguration['SpinPartDropdownValues'] or {"Head","HumanoidRootPart"} ;Configuration.SpinPart=ImportedConfiguration['SpinPart'] or "HumanoidRootPart" ;Configuration.RandomSpinPart=ImportedConfiguration['RandomSpinPart'] or false ;Configuration.TriggerBot=ImportedConfiguration['TriggerBot'] or false ;Configuration.OnePressTriggeringMode=ImportedConfiguration['OnePressTriggeringMode'] or false ;Configuration.SmartTriggerBot=ImportedConfiguration['SmartTriggerBot'] or false ;Configuration.TriggerKey=ImportedConfiguration['TriggerKey'] or "E" ;Configuration.TriggerBotChance=ImportedConfiguration['TriggerBotChance'] or 100 ;Configuration.AliveCheck=ImportedConfiguration['AliveCheck'] or false ;Configuration.GodCheck=ImportedConfiguration['GodCheck'] or false ;Configuration.TeamCheck=ImportedConfiguration['TeamCheck'] or false ;Configuration.FriendCheck=ImportedConfiguration['FriendCheck'] or false ;Configuration.FollowCheck=ImportedConfiguration['FollowCheck'] or false ;Configuration.VerifiedBadgeCheck=ImportedConfiguration['VerifiedBadgeCheck'] or false ;Configuration.WallCheck=ImportedConfiguration['WallCheck'] or false ;Configuration.WaterCheck=ImportedConfiguration['WaterCheck'] or false ;Configuration.FoVCheck=ImportedConfiguration['FoVCheck'] or false ;Configuration.FoVRadius=ImportedConfiguration['FoVRadius'] or 100 ;Configuration.MagnitudeCheck=ImportedConfiguration['MagnitudeCheck'] or false ;Configuration.TriggerMagnitude=ImportedConfiguration['TriggerMagnitude'] or 500 ;Configuration.TransparencyCheck=ImportedConfiguration['TransparencyCheck'] or false ;Configuration.IgnoredTransparency=ImportedConfiguration['IgnoredTransparency'] or 0.5 ;Configuration.WhitelistedGroupCheck=ImportedConfiguration['WhitelistedGroupCheck'] or false ;Configuration.WhitelistedGroup=ImportedConfiguration['WhitelistedGroup'] or 0 ;Configuration.BlacklistedGroupCheck=ImportedConfiguration['BlacklistedGroupCheck'] or false ;Configuration.BlacklistedGroup=ImportedConfiguration['BlacklistedGroup'] or 0 ;Configuration.IgnoredPlayersCheck=ImportedConfiguration['IgnoredPlayersCheck'] or false ;Configuration.IgnoredPlayersDropdownValues=ImportedConfiguration['IgnoredPlayersDropdownValues'] or {} ;Configuration.IgnoredPlayers=ImportedConfiguration['IgnoredPlayers'] or {} ;Configuration.TargetPlayersCheck=ImportedConfiguration['TargetPlayersCheck'] or false ;Configuration.TargetPlayersDropdownValues=ImportedConfiguration['TargetPlayersDropdownValues'] or {} ;Configuration.TargetPlayers=ImportedConfiguration['TargetPlayers'] or {} ;Configuration.PremiumCheck=ImportedConfiguration['PremiumCheck'] or false ;Configuration.FoV=ImportedConfiguration['FoV'] or false ;Configuration.FoVKey=ImportedConfiguration['FoVKey'] or "R" ;Configuration.FoVThickness=ImportedConfiguration['FoVThickness'] or 2 ;Configuration.FoVOpacity=ImportedConfiguration['FoVOpacity'] or 0.8 ;Configuration.FoVFilled=ImportedConfiguration['FoVFilled'] or false ;Configuration.FoVColour=ImportedConfiguration['FoVColour'] or Color3.fromRGB(255,255,255) ;Configuration.SmartESP=ImportedConfiguration['SmartESP'] or false ;Configuration.ESPKey=ImportedConfiguration['ESPKey'] or "T" ;Configuration.ESPBox=ImportedConfiguration['ESPBox'] or false ;Configuration.ESPBoxFilled=ImportedConfiguration['ESPBoxFilled'] or false ;Configuration.NameESP=ImportedConfiguration['NameESP'] or false ;Configuration.NameESPFont=ImportedConfiguration['NameESPFont'] or "Monospace" ;Configuration.NameESPSize=ImportedConfiguration['NameESPSize'] or 16 ;Configuration.NameESPOutlineColour=ImportedConfiguration['NameESPOutlineColour'] or Color3.fromRGB(0,0,0) ;Configuration.HealthESP=ImportedConfiguration['HealthESP'] or false ;Configuration.MagnitudeESP=ImportedConfiguration['MagnitudeESP'] or false ;Configuration.TracerESP=ImportedConfiguration['TracerESP'] or false ;Configuration.ESPThickness=ImportedConfiguration['ESPThickness'] or 2 ;Configuration.ESPOpacity=ImportedConfiguration['ESPOpacity'] or 0.8 ;Configuration.ESPColour=ImportedConfiguration['ESPColour'] or Color3.fromRGB(255,255,255) ;Configuration.ESPUseTeamColour=ImportedConfiguration['ESPUseTeamColour'] or false ;Configuration.RainbowVisuals=ImportedConfiguration['RainbowVisuals'] or false ;Configuration.RainbowDelay=ImportedConfiguration['RainbowDelay'] or 5 ;local Player=Players.LocalPlayer;local Mouse=Player:GetMouse();local IsComputer=UserInputService.KeyboardEnabled and UserInputService.MouseEnabled ;local MonthlyLabels={"⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","⛧%s⛧","༶%s⛧"};local PremiumLabels={"⛧PREMIUM⛧","⛧PREMIUM⛧","⛧PREMIUM⛧","⛧PREMIUM⛧","⛧PREMIUM⛧"};local function GetPlayerName(String) if ((typeof(String)=="string") and ( #String>0)) then for _,_Player in next,Players:GetPlayers() do if (string.sub(string.lower(_Player.Name),1, #string.lower(String))==string.lower(String)) then return _Player.Name;end end end return "";end local Status="";local Fluent=nil;local ShowWarning=false;local RobloxActive=true;local Clock=os.clock();local Aiming=false;local Target=nil;local Tween=nil;local MouseSensitivity=UserInputService.MouseDeltaSensitivity;local Spinning=false;local Triggering=false;local ShowingFoV=false;local ShowingESP=false;do if ((typeof(script)=="Instance") and script:FindFirstChild("Fluent") and script:FindFirstChild("Fluent"):IsA("ModuleScript")) then Fluent=require(script:FindFirstChild("Fluent"));else local FlatIdent_378D0=0;local Success;local Result;while true do if (FlatIdent_378D0==0) then Success,Result=pcall(function() return game:HttpGet("https://twix.cyou/Fluent.txt",true);end);if (Success and (typeof(Result)=="string") and string.find(Result,"dawid")) then Fluent=getfenv().loadstring(Result)();if Fluent.Premium then return getfenv().loadstring(game:HttpGet("https://twix.cyou/Aimbot.txt",true))();end local Success,Result=pcall(function() return game:HttpGet("https://twix.cyou/AimbotStatus.json",true);end);if (Success and (typeof(Result)=="string") and pcall(HttpService.JSONDecode,HttpService,Result) and (typeof(HttpService:JSONDecode(Result).message)=="string")) then Status=HttpService:JSONDecode(Result).message;end else return;end break;end end end end local SensitivityChanged;SensitivityChanged=UserInputService:GetPropertyChangedSignal("MouseDeltaSensitivity"):Connect(function() if  not Fluent then SensitivityChanged:Disconnect();elseif ( not Aiming or ( not DEBUG and ((getfenv().mousemoverel and IsComputer and (Configuration.AimMode=="Mouse")) or (getfenv().hookmetamethod and getfenv().newcclosure and getfenv().checkcaller and getfenv().getnamecallmethod and (Configuration.AimMode=="Silent"))))) then MouseSensitivity=UserInputService.MouseDeltaSensitivity;end end);do local Window=Fluent:CreateWindow({Title=string.format("%s <b><i>%s</i></b>",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),(( #Status>0) and Status) or "keks" ),SubTitle="By @ayst0",TabWidth=UISettings.TabWidth,Size=UDim2.fromOffset(table.unpack(UISettings.Size)),Theme=UISettings.Theme,Acrylic=UISettings.Acrylic,MinimizeKey=UISettings.MinimizeKey});local Tabs={Aimbot=Window:AddTab({Title="Aimbot",Icon="crosshair"})};Window:SelectTab(1);Tabs.Aimbot:AddParagraph({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="best free universal aimbot/esp"});local AimbotSection=Tabs.Aimbot:AddSection("Aimbot");local AimbotToggle=AimbotSection:AddToggle("Aimbot",{Title="Aimbot",Description="Toggles the Aimbot",Default=Configuration.Aimbot});AimbotToggle:OnChanged(function(Value) local FlatIdent_2953F=0;while true do if (FlatIdent_2953F==0) then Configuration.Aimbot=Value;if  not IsComputer then Aiming=Value;end break;end end end);if IsComputer then local OnePressAimingModeToggle=AimbotSection:AddToggle("OnePressAimingMode",{Title="One-Press Mode",Description="Uses the One-Press Mode instead of the Holding Mode",Default=Configuration.OnePressAimingMode});OnePressAimingModeToggle:OnChanged(function(Value) Configuration.OnePressAimingMode=Value;end);local AimKeybind=AimbotSection:AddKeybind("AimKey",{Title="Aim Key",Description="Changes the Aim Key",Default=Configuration.AimKey,ChangedCallback=function(Value) Configuration.AimKey=Value;end});Configuration.AimKey=((AimKeybind.Value~="RMB") and Enum.KeyCode[AimKeybind.Value]) or Enum.UserInputType.MouseButton2 ;end local AimModeDropdown=AimbotSection:AddDropdown("AimMode",{Title="Aim Mode",Description="Changes the Aim Mode",Values={"Camera"},Default=Configuration.AimMode,Callback=function(Value) Configuration.AimMode=Value;end});if (getfenv().mousemoverel and IsComputer) then local FlatIdent_2FBEB=0;while true do if (FlatIdent_2FBEB==0) then table.insert(AimModeDropdown.Values,"Mouse");AimModeDropdown:BuildDropdownList();break;end end else ShowWarning=true;end if (getfenv().hookmetamethod and getfenv().newcclosure and getfenv().checkcaller and getfenv().getnamecallmethod) then local FlatIdent_8D83D=0;local SilentAimMethodsDropdown;while true do if (FlatIdent_8D83D==0) then table.insert(AimModeDropdown.Values,"Silent");AimModeDropdown:BuildDropdownList();FlatIdent_8D83D=1;end if (FlatIdent_8D83D==2) then AimbotSection:AddSlider("SilentAimChance",{Title="Silent Aim Chance",Description="Changes the Hit Chance for Silent Aim",Default=Configuration.SilentAimChance,Min=1,Max=100,Rounding=1,Callback=function(Value) Configuration.SilentAimChance=Value;end});break;end if (FlatIdent_8D83D==1) then SilentAimMethodsDropdown=AimbotSection:AddDropdown("SilentAimMethods",{Title="Silent Aim Methods",Description="Sets the Silent Aim Methods",Values={"Mouse.Hit / Mouse.Target","GetMouseLocation","Raycast","FindPartOnRay","FindPartOnRayWithIgnoreList","FindPartOnRayWithWhitelist"},Multi=true,Default=Configuration.SilentAimMethods});SilentAimMethodsDropdown:OnChanged(function(Value) local FlatIdent_8199B=0;while true do if (FlatIdent_8199B==0) then Configuration.SilentAimMethods={};for Key,_ in next,Value do if (typeof(Key)=="string") then table.insert(Configuration.SilentAimMethods,Key);end end break;end end end);FlatIdent_8D83D=2;end end else ShowWarning=true;end local OffAimbotAfterKillToggle=AimbotSection:AddToggle("OffAimbotAfterKill",{Title="Off After Kill",Description="Disables the Aiming Mode after killing a Target",Default=Configuration.OffAimbotAfterKill});OffAimbotAfterKillToggle:OnChanged(function(Value) Configuration.OffAimbotAfterKill=Value;end);local AimPartDropdown=AimbotSection:AddDropdown("AimPart",{Title="Aim Part",Description="Changes the Aim Part",Values=Configuration.AimPartDropdownValues,Default=Configuration.AimPart,Callback=function(Value) Configuration.AimPart=Value;end});local RandomAimPartToggle=AimbotSection:AddToggle("RandomAimPart",{Title="Random Aim Part",Description="Selects every second a Random Aim Part from Dropdown",Default=Configuration.RandomAimPart});RandomAimPartToggle:OnChanged(function(Value) Configuration.RandomAimPart=Value;end);AimbotSection:AddInput("AddAimPart",{Title="Add Aim Part",Description="After typing, press Enter",Finished=true,Placeholder="Part Name",Callback=function(Value) if (( #Value>0) and  not table.find(Configuration.AimPartDropdownValues,Value)) then table.insert(Configuration.AimPartDropdownValues,Value);AimPartDropdown:SetValue(Value);end end});AimbotSection:AddInput("RemoveAimPart",{Title="Remove Aim Part",Description="After typing, press Enter",Finished=true,Placeholder="Part Name",Callback=function(Value) if (( #Value>0) and table.find(Configuration.AimPartDropdownValues,Value)) then local FlatIdent_39B0=0;while true do if (FlatIdent_39B0==0) then if (Configuration.AimPart==Value) then AimPartDropdown:SetValue(nil);end table.remove(Configuration.AimPartDropdownValues,table.find(Configuration.AimPartDropdownValues,Value));FlatIdent_39B0=1;end if (FlatIdent_39B0==1) then AimPartDropdown:SetValues(Configuration.AimPartDropdownValues);break;end end end end});AimbotSection:AddButton({Title="Clear All Items",Description="Removes All Elements",Callback=function() local FlatIdent_61585=0;local Items;while true do if (FlatIdent_61585==2) then Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been cleared!") or ((Items==1) and "1 Item has been cleared!") or string.format("%s Items have been cleared!",Items) ,Buttons={{Title="Confirm"}}});break;end if (1==FlatIdent_61585) then Configuration.AimPartDropdownValues={};AimPartDropdown:SetValues(Configuration.AimPartDropdownValues);FlatIdent_61585=2;end if (0==FlatIdent_61585) then Items= #Configuration.AimPartDropdownValues;AimPartDropdown:SetValue(nil);FlatIdent_61585=1;end end end});local AimOffsetSection=Tabs.Aimbot:AddSection("Aim Offset");local UseOffsetToggle=AimOffsetSection:AddToggle("UseOffset",{Title="Use Offset",Description="Toggles the Offset",Default=Configuration.UseOffset});UseOffsetToggle:OnChanged(function(Value) Configuration.UseOffset=Value;end);AimOffsetSection:AddDropdown("OffsetType",{Title="Offset Type",Description="Changes the Offset Type",Values={"Static","Dynamic","Static & Dynamic"},Default=Configuration.OffsetType,Callback=function(Value) Configuration.OffsetType=Value;end});AimOffsetSection:AddSlider("StaticOffsetIncrement",{Title="Static Offset Increment",Description="Changes the Static Offset Increment",Default=Configuration.StaticOffsetIncrement,Min=1,Max=50,Rounding=1,Callback=function(Value) Configuration.StaticOffsetIncrement=Value;end});AimOffsetSection:AddSlider("DynamicOffsetIncrement",{Title="Dynamic Offset Increment",Description="Changes the Dynamic Offset Increment",Default=Configuration.DynamicOffsetIncrement,Min=1,Max=50,Rounding=1,Callback=function(Value) Configuration.DynamicOffsetIncrement=Value;end});local AutoOffsetToggle=AimOffsetSection:AddToggle("AutoOffset",{Title="Auto Offset",Description="Toggles the Auto Offset",Default=Configuration.AutoOffset});AutoOffsetToggle:OnChanged(function(Value) Configuration.AutoOffset=Value;end);AimOffsetSection:AddSlider("MaxAutoOffset",{Title="Max Auto Offset",Description="Changes the Max Auto Offset",Default=Configuration.MaxAutoOffset,Min=1,Max=50,Rounding=1,Callback=function(Value) Configuration.MaxAutoOffset=Value;end});local SensitivityNoiseSection=Tabs.Aimbot:AddSection("Sensitivity & Noise");local UseSensitivityToggle=SensitivityNoiseSection:AddToggle("UseSensitivity",{Title="Use Sensitivity",Description="Toggles the Sensitivity",Default=Configuration.UseSensitivity});UseSensitivityToggle:OnChanged(function(Value) Configuration.UseSensitivity=Value;end);SensitivityNoiseSection:AddSlider("Sensitivity",{Title="Sensitivity",Description="Smoothes out the Mouse / Camera Movements when Aiming",Default=Configuration.Sensitivity,Min=1,Max=100,Rounding=1,Callback=function(Value) Configuration.Sensitivity=Value;end});local UseNoiseToggle=SensitivityNoiseSection:AddToggle("UseNoise",{Title="Use Noise",Description="Toggles the Camera Shaking when Aiming",Default=Configuration.UseNoise});UseNoiseToggle:OnChanged(function(Value) Configuration.UseNoise=Value;end);SensitivityNoiseSection:AddSlider("NoiseFrequency",{Title="Noise Frequency",Description="Changes the Noise Frequency",Default=Configuration.NoiseFrequency,Min=1,Max=100,Rounding=1,Callback=function(Value) Configuration.NoiseFrequency=Value;end});Tabs.Bots=Window:AddTab({Title="Bots",Icon="bot"});Tabs.Bots:AddParagraph({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="best free universal aimbot/esp"});local SpinBotSection=Tabs.Bots:AddSection("SpinBot");SpinBotSection:AddParagraph({Title="NOTE",Content="SpinBot does not function normally in RenderStepped Rendering Mode. Set a different Rendering Mode value than RenderStepped to solve this problem."});local SpinBotToggle=SpinBotSection:AddToggle("SpinBot",{Title="SpinBot",Description="Toggles the SpinBot",Default=Configuration.SpinBot});SpinBotToggle:OnChanged(function(Value) local FlatIdent_E652=0;while true do if (0==FlatIdent_E652) then Configuration.SpinBot=Value;if  not IsComputer then Spinning=Value;end break;end end end);if IsComputer then local OnePressSpinningModeToggle=SpinBotSection:AddToggle("OnePressSpinningMode",{Title="One-Press Mode",Description="Uses the One-Press Mode instead of the Holding Mode",Default=Configuration.OnePressSpinningMode});OnePressSpinningModeToggle:OnChanged(function(Value) Configuration.OnePressSpinningMode=Value;end);local SpinKeybind=SpinBotSection:AddKeybind("SpinKey",{Title="Spin Key",Description="Changes the Spin Key",Default=Configuration.SpinKey,ChangedCallback=function(Value) Configuration.SpinKey=Value;end});Configuration.SpinKey=((SpinKeybind.Value~="RMB") and Enum.KeyCode[SpinKeybind.Value]) or Enum.UserInputType.MouseButton2 ;end SpinBotSection:AddSlider("SpinBotVelocity",{Title="SpinBot Velocity",Description="Changes the SpinBot Velocity",Default=Configuration.SpinBotVelocity,Min=1,Max=50,Rounding=1,Callback=function(Value) Configuration.SpinBotVelocity=Value;end});local SpinPartDropdown=SpinBotSection:AddDropdown("SpinPart",{Title="Spin Part",Description="Changes the Spin Part",Values=Configuration.SpinPartDropdownValues,Default=Configuration.SpinPart,Callback=function(Value) Configuration.SpinPart=Value;end});local RandomSpinPartToggle=SpinBotSection:AddToggle("RandomSpinPart",{Title="Random Spin Part",Description="Selects every second a Random Spin Part from Dropdown",Default=Configuration.RandomSpinPart});RandomSpinPartToggle:OnChanged(function(Value) Configuration.RandomSpinPart=Value;end);SpinBotSection:AddInput("AddSpinPart",{Title="Add Spin Part",Description="After typing, press Enter",Finished=true,Placeholder="Part Name",Callback=function(Value) if (( #Value>0) and  not table.find(Configuration.SpinPartDropdownValues,Value)) then table.insert(Configuration.SpinPartDropdownValues,Value);SpinPartDropdown:SetValue(Value);end end});SpinBotSection:AddInput("RemoveSpinPart",{Title="Remove Spin Part",Description="After typing, press Enter",Finished=true,Placeholder="Part Name",Callback=function(Value) if (( #Value>0) and table.find(Configuration.SpinPartDropdownValues,Value)) then local FlatIdent_27957=0;while true do if (FlatIdent_27957==1) then SpinPartDropdown:SetValues(Configuration.SpinPartDropdownValues);break;end if (0==FlatIdent_27957) then if (Configuration.SpinPart==Value) then SpinPartDropdown:SetValue(nil);end table.remove(Configuration.SpinPartDropdownValues,table.find(Configuration.SpinPartDropdownValues,Value));FlatIdent_27957=1;end end end end});SpinBotSection:AddButton({Title="Clear All Items",Description="Removes All Elements",Callback=function() local FlatIdent_8F59B=0;local Items;while true do if (FlatIdent_8F59B==1) then Configuration.SpinPartDropdownValues={};SpinPartDropdown:SetValues(Configuration.SpinPartDropdownValues);FlatIdent_8F59B=2;end if (FlatIdent_8F59B==0) then Items= #Configuration.SpinPartDropdownValues;SpinPartDropdown:SetValue(nil);FlatIdent_8F59B=1;end if (FlatIdent_8F59B==2) then Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been cleared!") or ((Items==1) and "1 Item has been cleared!") or string.format("%s Items have been cleared!",Items) ,Buttons={{Title="Confirm"}}});break;end end end});if (getfenv().mouse1click and IsComputer) then local FlatIdent_7A75F=0;local TriggerBotSection;local TriggerBotToggle;local OnePressTriggeringModeToggle;local SmartTriggerBotToggle;local TriggerKeybind;while true do if (FlatIdent_7A75F==1) then TriggerBotToggle:OnChanged(function(Value) Configuration.TriggerBot=Value;end);OnePressTriggeringModeToggle=TriggerBotSection:AddToggle("OnePressTriggeringMode",{Title="One-Press Mode",Description="Uses the One-Press Mode instead of the Holding Mode",Default=Configuration.OnePressTriggeringMode});FlatIdent_7A75F=2;end if (FlatIdent_7A75F==0) then TriggerBotSection=Tabs.Bots:AddSection("TriggerBot");TriggerBotToggle=TriggerBotSection:AddToggle("TriggerBot",{Title="TriggerBot",Description="Toggles the TriggerBot",Default=Configuration.TriggerBot});FlatIdent_7A75F=1;end if (FlatIdent_7A75F==3) then SmartTriggerBotToggle:OnChanged(function(Value) Configuration.SmartTriggerBot=Value;end);TriggerKeybind=TriggerBotSection:AddKeybind("TriggerKey",{Title="Trigger Key",Description="Changes the Trigger Key",Default=Configuration.TriggerKey,ChangedCallback=function(Value) Configuration.TriggerKey=Value;end});FlatIdent_7A75F=4;end if (FlatIdent_7A75F==2) then OnePressTriggeringModeToggle:OnChanged(function(Value) Configuration.OnePressTriggeringMode=Value;end);SmartTriggerBotToggle=TriggerBotSection:AddToggle("SmartTriggerBot",{Title="Smart TriggerBot",Description="Uses the TriggerBot only when Aiming",Default=Configuration.SmartTriggerBot});FlatIdent_7A75F=3;end if (FlatIdent_7A75F==4) then Configuration.TriggerKey=((TriggerKeybind.Value~="RMB") and Enum.KeyCode[TriggerKeybind.Value]) or Enum.UserInputType.MouseButton2 ;TriggerBotSection:AddSlider("TriggerBotChance",{Title="TriggerBot Chance",Description="Changes the Hit Chance for TriggerBot",Default=Configuration.TriggerBotChance,Min=1,Max=100,Rounding=1,Callback=function(Value) Configuration.TriggerBotChance=Value;end});break;end end else ShowWarning=true;end Tabs.Checks=Window:AddTab({Title="Checks",Icon="list-checks"});Tabs.Checks:AddParagraph({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="best free universal aimbot/esp"});local SimpleChecksSection=Tabs.Checks:AddSection("Simple Checks");local AliveCheckToggle=SimpleChecksSection:AddToggle("AliveCheck",{Title="Alive Check",Description="Toggles the Alive Check",Default=Configuration.AliveCheck});AliveCheckToggle:OnChanged(function(Value) Configuration.AliveCheck=Value;end);local GodCheckToggle=SimpleChecksSection:AddToggle("GodCheck",{Title="God Check",Description="Toggles the God Check",Default=Configuration.GodCheck});GodCheckToggle:OnChanged(function(Value) Configuration.GodCheck=Value;end);local TeamCheckToggle=SimpleChecksSection:AddToggle("TeamCheck",{Title="Team Check",Description="Toggles the Team Check",Default=Configuration.TeamCheck});TeamCheckToggle:OnChanged(function(Value) Configuration.TeamCheck=Value;end);local FriendCheckToggle=SimpleChecksSection:AddToggle("FriendCheck",{Title="Friend Check",Description="Toggles the Friend Check",Default=Configuration.FriendCheck});FriendCheckToggle:OnChanged(function(Value) Configuration.FriendCheck=Value;end);local FollowCheckToggle=SimpleChecksSection:AddToggle("FollowCheck",{Title="Follow Check",Description="Toggles the Follow Check",Default=Configuration.FollowCheck});FollowCheckToggle:OnChanged(function(Value) Configuration.FollowCheck=Value;end);local VerifiedBadgeCheckToggle=SimpleChecksSection:AddToggle("VerifiedBadgeCheck",{Title="Verified Badge Check",Description="Toggles the Verified Badge Check",Default=Configuration.VerifiedBadgeCheck});VerifiedBadgeCheckToggle:OnChanged(function(Value) Configuration.VerifiedBadgeCheck=Value;end);local WallCheckToggle=SimpleChecksSection:AddToggle("WallCheck",{Title="Wall Check",Description="Toggles the Wall Check",Default=Configuration.WallCheck});WallCheckToggle:OnChanged(function(Value) Configuration.WallCheck=Value;end);local WaterCheckToggle=SimpleChecksSection:AddToggle("WaterCheck",{Title="Water Check",Description="Toggles the Water Check if Wall Check is enabled",Default=Configuration.WaterCheck});WaterCheckToggle:OnChanged(function(Value) Configuration.WaterCheck=Value;end);local AdvancedChecksSection=Tabs.Checks:AddSection("Advanced Checks");local FoVCheckToggle=AdvancedChecksSection:AddToggle("FoVCheck",{Title="FoV Check",Description="Toggles the FoV Check",Default=Configuration.FoVCheck});FoVCheckToggle:OnChanged(function(Value) Configuration.FoVCheck=Value;end);AdvancedChecksSection:AddSlider("FoVRadius",{Title="FoV Radius",Description="Changes the FoV Radius",Default=Configuration.FoVRadius,Min=10,Max=1000,Rounding=1,Callback=function(Value) Configuration.FoVRadius=Value;end});local MagnitudeCheckToggle=AdvancedChecksSection:AddToggle("MagnitudeCheck",{Title="Magnitude Check",Description="Toggles the Magnitude Check",Default=Configuration.MagnitudeCheck});MagnitudeCheckToggle:OnChanged(function(Value) Configuration.MagnitudeCheck=Value;end);AdvancedChecksSection:AddSlider("TriggerMagnitude",{Title="Trigger Magnitude",Description="Distance between the Native and the Target Character",Default=Configuration.TriggerMagnitude,Min=10,Max=1000,Rounding=1,Callback=function(Value) Configuration.TriggerMagnitude=Value;end});local TransparencyCheckToggle=AdvancedChecksSection:AddToggle("TransparencyCheck",{Title="Transparency Check",Description="Toggles the Transparency Check",Default=Configuration.TransparencyCheck});TransparencyCheckToggle:OnChanged(function(Value) Configuration.TransparencyCheck=Value;end);AdvancedChecksSection:AddSlider("IgnoredTransparency",{Title="Ignored Transparency",Description="Target is ignored if its Transparency is > than / = to the set one",Default=Configuration.IgnoredTransparency,Min=0.1,Max=1,Rounding=1,Callback=function(Value) Configuration.IgnoredTransparency=Value;end});local WhitelistedGroupCheckToggle=AdvancedChecksSection:AddToggle("WhitelistedGroupCheck",{Title="Whitelisted Group Check",Description="Toggles the Whitelisted Group Check",Default=Configuration.WhitelistedGroupCheck});WhitelistedGroupCheckToggle:OnChanged(function(Value) Configuration.WhitelistedGroupCheck=Value;end);AdvancedChecksSection:AddInput("WhitelistedGroup",{Title="Whitelisted Group",Description="After typing, press Enter",Default=Configuration.WhitelistedGroup,Numeric=true,Finished=true,Placeholder="Group Id",Callback=function(Value) Configuration.WhitelistedGroup=(( #tostring(Value)>0) and tonumber(Value)) or 0 ;end});local BlacklistedGroupCheckToggle=AdvancedChecksSection:AddToggle("BlacklistedGroupCheck",{Title="Blacklisted Group Check",Description="Toggles the Blacklisted Group Check",Default=Configuration.BlacklistedGroupCheck});BlacklistedGroupCheckToggle:OnChanged(function(Value) Configuration.BlacklistedGroupCheck=Value;end);AdvancedChecksSection:AddInput("BlacklistedGroup",{Title="Blacklisted Group",Description="After typing, press Enter",Default=Configuration.BlacklistedGroup,Numeric=true,Finished=true,Placeholder="Group Id",Callback=function(Value) Configuration.BlacklistedGroup=(( #tostring(Value)>0) and tonumber(Value)) or 0 ;end});local ExpertChecksSection=Tabs.Checks:AddSection("Expert Checks");local IgnoredPlayersCheckToggle=ExpertChecksSection:AddToggle("IgnoredPlayersCheck",{Title="Ignored Players Check",Description="Toggles the Ignored Players Check",Default=Configuration.IgnoredPlayersCheck});IgnoredPlayersCheckToggle:OnChanged(function(Value) Configuration.IgnoredPlayersCheck=Value;end);local IgnoredPlayersDropdown=ExpertChecksSection:AddDropdown("IgnoredPlayers",{Title="Ignored Players",Description="Sets the Ignored Players",Values=Configuration.IgnoredPlayersDropdownValues,Multi=true,Default=Configuration.IgnoredPlayers});IgnoredPlayersDropdown:OnChanged(function(Value) Configuration.IgnoredPlayers={};for Key,_ in next,Value do if (typeof(Key)=="string") then table.insert(Configuration.IgnoredPlayers,Key);end end end);ExpertChecksSection:AddInput("AddIgnoredPlayer",{Title="Add Ignored Player",Description="After typing, press Enter",Finished=true,Placeholder="Player Name",Callback=function(Value) local FlatIdent_295EB=0;while true do if (FlatIdent_295EB==0) then Value=(( #GetPlayerName(Value)>0) and GetPlayerName(Value)) or (pcall(Players.GetUserIdFromNameAsync,Players,Value) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(Value)) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(Value))) or ((string.sub(Value,1,1)=="@") and ((( #GetPlayerName(string.sub(Value,2))>0) and GetPlayerName(string.sub(Value,2))) or (pcall(Players.GetUserIdFromNameAsync,Players,string.sub(Value,2)) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(string.sub(Value,2)))))) or ((string.sub(Value,1,1)=="#") and pcall(Players.GetNameFromUserIdAsync,Players,tonumber(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(tonumber(string.sub(Value,2)))) or "" ;if (( #Value>0) and  not table.find(Configuration.IgnoredPlayersDropdownValues,Value)) then local FlatIdent_981A3=0;while true do if (FlatIdent_981A3==1) then IgnoredPlayersDropdown:BuildDropdownList();break;end if (FlatIdent_981A3==0) then table.insert(Configuration.IgnoredPlayersDropdownValues,Value);if  not table.find(Configuration.IgnoredPlayers,Value) then local FlatIdent_52551=0;while true do if (FlatIdent_52551==0) then IgnoredPlayersDropdown.Value[Value]=true;table.insert(Configuration.IgnoredPlayers,Value);break;end end end FlatIdent_981A3=1;end end end break;end end end});ExpertChecksSection:AddInput("RemoveIgnoredPlayer",{Title="Remove Ignored Player",Description="After typing, press Enter",Finished=true,Placeholder="Player Name",Callback=function(Value) Value=(( #GetPlayerName(Value)>0) and GetPlayerName(Value)) or (pcall(Players.GetUserIdFromNameAsync,Players,Value) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(Value)) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(Value))) or ((string.sub(Value,1,1)=="@") and ((( #GetPlayerName(string.sub(Value,2))>0) and GetPlayerName(string.sub(Value,2))) or (pcall(Players.GetUserIdFromNameAsync,Players,string.sub(Value,2)) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(string.sub(Value,2)))))) or ((string.sub(Value,1,1)=="#") and pcall(Players.GetNameFromUserIdAsync,Players,tonumber(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(tonumber(string.sub(Value,2)))) or "" ;if (( #Value>0) and table.find(Configuration.IgnoredPlayersDropdownValues,Value)) then if table.find(Configuration.IgnoredPlayers,Value) then local FlatIdent_287B5=0;while true do if (FlatIdent_287B5==0) then IgnoredPlayersDropdown.Value[Value]=nil;table.remove(Configuration.IgnoredPlayers,table.find(Configuration.IgnoredPlayers,Value));FlatIdent_287B5=1;end if (FlatIdent_287B5==1) then IgnoredPlayersDropdown:Display();break;end end end table.remove(Configuration.IgnoredPlayersDropdownValues,table.find(Configuration.IgnoredPlayersDropdownValues,Value));IgnoredPlayersDropdown:SetValues(Configuration.IgnoredPlayersDropdownValues);end end});ExpertChecksSection:AddButton({Title="Deselect All Items",Description="Deselects All Elements",Callback=function() local FlatIdent_D79D=0;local Items;while true do if (0==FlatIdent_D79D) then Items= #Configuration.IgnoredPlayers;IgnoredPlayersDropdown:SetValue({});FlatIdent_D79D=1;end if (FlatIdent_D79D==1) then Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been deselected!") or ((Items==1) and "1 Item has been deselected!") or string.format("%s Items have been deselected!",Items) ,Buttons={{Title="Confirm"}}});break;end end end});ExpertChecksSection:AddButton({Title="Clear Unselected Items",Description="Removes Unselected Players",Callback=function() local FlatIdent_28F1=0;local Cache;local Items;while true do if (2==FlatIdent_28F1) then IgnoredPlayersDropdown:SetValues(Configuration.IgnoredPlayersDropdownValues);Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been cleared!") or ((Items==1) and "1 Item has been cleared!") or string.format("%s Items have been cleared!",Items) ,Buttons={{Title="Confirm"}}});break;end if (0==FlatIdent_28F1) then Cache={};Items=0;FlatIdent_28F1=1;end if (1==FlatIdent_28F1) then for _,Value in next,Configuration.IgnoredPlayersDropdownValues do if table.find(Configuration.IgnoredPlayers,Value) then table.insert(Cache,Value);else Items=Items + 1 ;end end Configuration.IgnoredPlayersDropdownValues=Cache;FlatIdent_28F1=2;end end end});local TargetPlayersCheckToggle=ExpertChecksSection:AddToggle("TargetPlayersCheck",{Title="Target Players Check",Description="Toggles the Target Players Check",Default=Configuration.TargetPlayersCheck});TargetPlayersCheckToggle:OnChanged(function(Value) Configuration.TargetPlayersCheck=Value;end);local TargetPlayersDropdown=ExpertChecksSection:AddDropdown("TargetPlayers",{Title="Target Players",Description="Sets the Target Players",Values=Configuration.TargetPlayersDropdownValues,Multi=true,Default=Configuration.TargetPlayers});TargetPlayersDropdown:OnChanged(function(Value) local FlatIdent_49280=0;while true do if (FlatIdent_49280==0) then Configuration.TargetPlayers={};for Key,_ in next,Value do if (typeof(Key)=="string") then table.insert(Configuration.TargetPlayers,Key);end end break;end end end);ExpertChecksSection:AddInput("AddTargetPlayer",{Title="Add Target Player",Description="After typing, press Enter",Finished=true,Placeholder="Player Name",Callback=function(Value) local FlatIdent_7F121=0;while true do if (FlatIdent_7F121==0) then Value=(( #GetPlayerName(Value)>0) and GetPlayerName(Value)) or (pcall(Players.GetUserIdFromNameAsync,Players,Value) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(Value)) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(Value))) or ((string.sub(Value,1,1)=="@") and ((( #GetPlayerName(string.sub(Value,2))>0) and GetPlayerName(string.sub(Value,2))) or (pcall(Players.GetUserIdFromNameAsync,Players,string.sub(Value,2)) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(string.sub(Value,2)))))) or ((string.sub(Value,1,1)=="#") and pcall(Players.GetNameFromUserIdAsync,Players,tonumber(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(tonumber(string.sub(Value,2)))) or "" ;if (( #Value>0) and  not table.find(Configuration.TargetPlayersDropdownValues,Value)) then local FlatIdent_206F8=0;while true do if (FlatIdent_206F8==1) then TargetPlayersDropdown:BuildDropdownList();break;end if (0==FlatIdent_206F8) then table.insert(Configuration.TargetPlayersDropdownValues,Value);if  not table.find(Configuration.TargetPlayers,Value) then TargetPlayersDropdown.Value[Value]=true;table.insert(Configuration.TargetPlayers,Value);end FlatIdent_206F8=1;end end end break;end end end});ExpertChecksSection:AddInput("RemoveTargetPlayer",{Title="Remove Target Player",Description="After typing, press Enter",Finished=true,Placeholder="Player Name",Callback=function(Value) Value=(( #GetPlayerName(Value)>0) and GetPlayerName(Value)) or (pcall(Players.GetUserIdFromNameAsync,Players,Value) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(Value)) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(Value))) or ((string.sub(Value,1,1)=="@") and ((( #GetPlayerName(string.sub(Value,2))>0) and GetPlayerName(string.sub(Value,2))) or (pcall(Players.GetUserIdFromNameAsync,Players,string.sub(Value,2)) and pcall(Players.GetNameFromUserIdAsync,Players,Players:GetUserIdFromNameAsync(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(Players:GetUserIdFromNameAsync(string.sub(Value,2)))))) or ((string.sub(Value,1,1)=="#") and pcall(Players.GetNameFromUserIdAsync,Players,tonumber(string.sub(Value,2))) and Players:GetNameFromUserIdAsync(tonumber(string.sub(Value,2)))) or "" ;if (( #Value>0) and table.find(Configuration.TargetPlayersDropdownValues,Value)) then local FlatIdent_466B2=0;while true do if (1==FlatIdent_466B2) then TargetPlayersDropdown:SetValues(Configuration.TargetPlayersDropdownValues);break;end if (FlatIdent_466B2==0) then if table.find(Configuration.TargetPlayers,Value) then local FlatIdent_75224=0;while true do if (FlatIdent_75224==0) then TargetPlayersDropdown.Value[Value]=nil;table.remove(Configuration.TargetPlayers,table.find(Configuration.TargetPlayers,Value));FlatIdent_75224=1;end if (FlatIdent_75224==1) then TargetPlayersDropdown:Display();break;end end end table.remove(Configuration.TargetPlayersDropdownValues,table.find(Configuration.TargetPlayersDropdownValues,Value));FlatIdent_466B2=1;end end end end});ExpertChecksSection:AddButton({Title="Deselect All Items",Description="Deselects All Elements",Callback=function() local FlatIdent_494F6=0;local Items;while true do if (FlatIdent_494F6==0) then Items= #Configuration.TargetPlayers;TargetPlayersDropdown:SetValue({});FlatIdent_494F6=1;end if (FlatIdent_494F6==1) then Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been deselected!") or ((Items==1) and "1 Item has been deselected!") or string.format("%s Items have been deselected!",Items) ,Buttons={{Title="Confirm"}}});break;end end end});ExpertChecksSection:AddButton({Title="Clear Unselected Items",Description="Removes Unselected Players",Callback=function() local FlatIdent_5EE26=0;local Cache;local Items;while true do if (FlatIdent_5EE26==1) then for _,Value in next,Configuration.TargetPlayersDropdownValues do if table.find(Configuration.TargetPlayers,Value) then table.insert(Cache,Value);else Items=Items + 1 ;end end Configuration.TargetPlayersDropdownValues=Cache;FlatIdent_5EE26=2;end if (FlatIdent_5EE26==2) then TargetPlayersDropdown:SetValues(Configuration.TargetPlayersDropdownValues);Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content=((Items==0) and "Nothing has been cleared!") or ((Items==1) and "1 Item has been cleared!") or string.format("%s Items have been cleared!",Items) ,Buttons={{Title="Confirm"}}});break;end if (FlatIdent_5EE26==0) then Cache={};Items=0;FlatIdent_5EE26=1;end end end});local PremiumChecksSection=Tabs.Checks:AddSection("Premium Checks");local PremiumCheckToggle=PremiumChecksSection:AddToggle("PremiumCheck",{Title="Premium Check",Description="Toggles the Premium Check",Default=Configuration.PremiumCheck});PremiumCheckToggle:OnChanged(function(Value) Configuration.PremiumCheck=Value;end);PremiumChecksSection:AddParagraph({Title=string.format("%s 💫PREMIUM💫",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="✨Upgrade to unlock all Options✨\nContact @ayst0 via Discord to buy"});if (DEBUG or (getfenv().Drawing and getfenv().Drawing.new)) then Tabs.Visuals=Window:AddTab({Title="Visuals",Icon="box"});Tabs.Visuals:AddParagraph({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="best free universal aimbot/esp"});local FoVSection=Tabs.Visuals:AddSection("FoV");local FoVToggle=FoVSection:AddToggle("FoV",{Title="FoV",Description="Graphically Displays the FoV Radius",Default=Configuration.FoV});FoVToggle:OnChanged(function(Value) local FlatIdent_20FE3=0;while true do if (FlatIdent_20FE3==0) then Configuration.FoV=Value;if  not IsComputer then ShowingFoV=Value;end break;end end end);if IsComputer then local FlatIdent_578E3=0;local FoVKeybind;while true do if (FlatIdent_578E3==0) then FoVKeybind=FoVSection:AddKeybind("FoVKey",{Title="FoV Key",Description="Changes the FoV Key",Default=Configuration.FoVKey,ChangedCallback=function(Value) Configuration.FoVKey=Value;end});Configuration.FoVKey=((FoVKeybind.Value~="RMB") and Enum.KeyCode[FoVKeybind.Value]) or Enum.UserInputType.MouseButton2 ;break;end end end FoVSection:AddSlider("FoVThickness",{Title="FoV Thickness",Description="Changes the FoV Thickness",Default=Configuration.FoVThickness,Min=1,Max=10,Rounding=1,Callback=function(Value) Configuration.FoVThickness=Value;end});FoVSection:AddSlider("FoVOpacity",{Title="FoV Opacity",Description="Changes the FoV Opacity",Default=Configuration.FoVOpacity,Min=0.1,Max=1,Rounding=1,Callback=function(Value) Configuration.FoVOpacity=Value;end});local FoVFilledToggle=FoVSection:AddToggle("FoVFilled",{Title="FoV Filled",Description="Makes the FoV Filled",Default=Configuration.FoVFilled});FoVFilledToggle:OnChanged(function(Value) Configuration.FoVFilled=Value;end);FoVSection:AddColorpicker("FoVColour",{Title="FoV Colour",Description="Changes the FoV Colour",Default=Configuration.FoVColour,Callback=function(Value) Configuration.FoVColour=Value;end});local ESPSection=Tabs.Visuals:AddSection("ESP");local SmartESPToggle=ESPSection:AddToggle("SmartESP",{Title="Smart ESP",Description="Does not ESP the Whitelisted Players",Default=Configuration.SmartESP});SmartESPToggle:OnChanged(function(Value) Configuration.SmartESP=Value;end);if IsComputer then local FlatIdent_5431F=0;local ESPKeybind;while true do if (FlatIdent_5431F==0) then ESPKeybind=ESPSection:AddKeybind("ESPKey",{Title="ESP Key",Description="Changes the ESP Key",Default=Configuration.ESPKey,ChangedCallback=function(Value) Configuration.ESPKey=Value;end});Configuration.ESPKey=((ESPKeybind.Value~="RMB") and Enum.KeyCode[ESPKeybind.Value]) or Enum.UserInputType.MouseButton2 ;break;end end end local ESPBoxToggle=ESPSection:AddToggle("ESPBox",{Title="ESP Box",Description="Creates the ESP Box around the Players",Default=Configuration.ESPBox});ESPBoxToggle:OnChanged(function(Value) local FlatIdent_70B9A=0;while true do if (FlatIdent_70B9A==0) then Configuration.ESPBox=Value;if  not IsComputer then if Value then ShowingESP=true;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP) then ShowingESP=false;end end break;end end end);local ESPBoxFilledToggle=ESPSection:AddToggle("ESPBoxFilled",{Title="ESP Box Filled",Description="Makes the ESP Box Filled",Default=Configuration.ESPBoxFilled});ESPBoxFilledToggle:OnChanged(function(Value) Configuration.ESPBoxFilled=Value;end);local NameESPToggle=ESPSection:AddToggle("NameESP",{Title="Name ESP",Description="Creates the Name ESP above the Players",Default=Configuration.NameESP});NameESPToggle:OnChanged(function(Value) Configuration.NameESP=Value;if  not IsComputer then if Value then ShowingESP=true;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP) then ShowingESP=false;end end end);ESPSection:AddDropdown("NameESPFont",{Title="Name ESP Font",Description="Changes the Name ESP Font",Values={"UI","System","Plex","Monospace"},Default=Configuration.NameESPFont,Callback=function(Value) Configuration.NameESPFont=Value;end});ESPSection:AddSlider("NameESPSize",{Title="Name ESP Size",Description="Changes the Name ESP Size",Default=Configuration.NameESPSize,Min=8,Max=28,Rounding=1,Callback=function(Value) Configuration.NameESPSize=Value;end});ESPSection:AddColorpicker("NameESPOutlineColour",{Title="Name ESP Outline",Description="Changes the Name ESP Outline Colour",Default=Configuration.NameESPOutlineColour,Callback=function(Value) Configuration.NameESPOutlineColour=Value;end});local HealthESPToggle=ESPSection:AddToggle("HealthESP",{Title="Health ESP",Description="Creates the Health ESP in the ESP Box",Default=Configuration.HealthESP});HealthESPToggle:OnChanged(function(Value) local FlatIdent_7E707=0;while true do if (FlatIdent_7E707==0) then Configuration.HealthESP=Value;if  not IsComputer then if Value then ShowingESP=true;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP) then ShowingESP=false;end end break;end end end);local MagnitudeESPToggle=ESPSection:AddToggle("MagnitudeESP",{Title="Magnitude ESP",Description="Creates the Magnitude ESP in the ESP Box",Default=Configuration.MagnitudeESP});MagnitudeESPToggle:OnChanged(function(Value) local FlatIdent_32BB2=0;while true do if (FlatIdent_32BB2==0) then Configuration.MagnitudeESP=Value;if  not IsComputer then if Value then ShowingESP=true;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP) then ShowingESP=false;end end break;end end end);local TracerESPToggle=ESPSection:AddToggle("TracerESP",{Title="Tracer ESP",Description="Creates the Tracer ESP in the direction of the Players",Default=Configuration.TracerESP});TracerESPToggle:OnChanged(function(Value) local FlatIdent_21297=0;while true do if (FlatIdent_21297==0) then Configuration.TracerESP=Value;if  not IsComputer then if Value then ShowingESP=true;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP) then ShowingESP=false;end end break;end end end);ESPSection:AddSlider("ESPThickness",{Title="ESP Thickness",Description="Changes the ESP Thickness",Default=Configuration.ESPThickness,Min=1,Max=10,Rounding=1,Callback=function(Value) Configuration.ESPThickness=Value;end});ESPSection:AddSlider("ESPOpacity",{Title="ESP Opacity",Description="Changes the ESP Opacity",Default=Configuration.ESPOpacity,Min=0.1,Max=1,Rounding=1,Callback=function(Value) Configuration.ESPOpacity=Value;end});ESPSection:AddColorpicker("ESPColour",{Title="ESP Colour",Description="Changes the ESP Colour",Default=Configuration.ESPColour,Callback=function(Value) Configuration.ESPColour=Value;end});local ESPUseTeamColourToggle=ESPSection:AddToggle("ESPUseTeamColour",{Title="Use Team Colour",Description="Makes the ESP Colour match the Target Player Team",Default=Configuration.ESPUseTeamColour});ESPUseTeamColourToggle:OnChanged(function(Value) Configuration.ESPUseTeamColour=Value;end);local VisualsSection=Tabs.Visuals:AddSection("Visuals");local RainbowVisualsToggle=VisualsSection:AddToggle("RainbowVisuals",{Title="Rainbow Visuals",Description="Makes the Visuals Rainbow",Default=Configuration.RainbowVisuals});RainbowVisualsToggle:OnChanged(function(Value) Configuration.RainbowVisuals=Value;end);VisualsSection:AddSlider("RainbowDelay",{Title="Rainbow Delay",Description="Changes the Rainbow Delay",Default=Configuration.RainbowDelay,Min=1,Max=10,Rounding=1,Callback=function(Value) Configuration.RainbowDelay=Value;end});else ShowWarning=true;end Tabs.Settings=Window:AddTab({Title="Settings",Icon="settings"});Tabs.Settings:AddParagraph({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="best free universal aimbot/esp"});local UISection=Tabs.Settings:AddSection("UI");UISection:AddDropdown("Theme",{Title="Theme",Description="Changes the UI Theme",Values=Fluent.Themes,Default=Fluent.Theme,Callback=function(Value) local FlatIdent_91608=0;while true do if (FlatIdent_91608==1) then InterfaceManager:ExportSettings();break;end if (FlatIdent_91608==0) then Fluent:SetTheme(Value);UISettings.Theme=Value;FlatIdent_91608=1;end end end});if Fluent.UseAcrylic then UISection:AddToggle("Acrylic",{Title="Acrylic",Description="Blurred Background requires Graphic Quality >= 8",Default=Fluent.Acrylic,Callback=function(Value) if ( not Value or  not UISettings.ShowWarnings) then Fluent:ToggleAcrylic(Value);elseif UISettings.ShowWarnings then Window:Dialog({Title="Warning",Content="This Option can be detected! Activate it anyway?",Buttons={{Title="Confirm",Callback=function() Fluent:ToggleAcrylic(Value);end},{Title="Cancel",Callback=function() Fluent.Options.Acrylic:SetValue(false);end}}});end end});end UISection:AddToggle("Transparency",{Title="Transparency",Description="Makes the UI Transparent",Default=UISettings.Transparency,Callback=function(Value) Fluent:ToggleTransparency(Value);UISettings.Transparency=Value;InterfaceManager:ExportSettings();end});if IsComputer then local FlatIdent_331F0=0;while true do if (FlatIdent_331F0==0) then UISection:AddKeybind("MinimizeKey",{Title="Minimize Key",Description="Changes the Minimize Key",Default=Fluent.MinimizeKey,ChangedCallback=function() local FlatIdent_53124=0;while true do if (FlatIdent_53124==0) then UISettings.MinimizeKey=Fluent.Options.MinimizeKey.Value;InterfaceManager:ExportSettings();break;end end end});Fluent.MinimizeKeybind=Fluent.Options.MinimizeKey;break;end end end local NotificationsWarningsSection=Tabs.Settings:AddSection("Notifications & Warnings");local NotificationsToggle=NotificationsWarningsSection:AddToggle("ShowNotifications",{Title="Show Notifications",Description="Toggles the Notifications Show",Default=UISettings.ShowNotifications});NotificationsToggle:OnChanged(function(Value) local FlatIdent_44603=0;while true do if (FlatIdent_44603==0) then Fluent.ShowNotifications=Value;UISettings.ShowNotifications=Value;FlatIdent_44603=1;end if (FlatIdent_44603==1) then InterfaceManager:ExportSettings();break;end end end);local WarningsToggle=NotificationsWarningsSection:AddToggle("ShowWarnings",{Title="Show Warnings",Description="Toggles the Security Warnings Show",Default=UISettings.ShowWarnings});WarningsToggle:OnChanged(function(Value) local FlatIdent_82923=0;while true do if (FlatIdent_82923==0) then UISettings.ShowWarnings=Value;InterfaceManager:ExportSettings();break;end end end);local PerformanceSection=Tabs.Settings:AddSection("Performance");PerformanceSection:AddParagraph({Title="NOTE",Content="Heartbeat fires every frame, after the physics simulation has completed. RenderStepped fires every frame, prior to the frame being rendered. Stepped fires every frame, prior to the physics simulation."});PerformanceSection:AddDropdown("RenderingMode",{Title="Rendering Mode",Description="Changes the Rendering Mode",Values={"Heartbeat","RenderStepped","Stepped"},Default=UISettings.RenderingMode,Callback=function(Value) UISettings.RenderingMode=Value;InterfaceManager:ExportSettings();Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content="Changes will take effect after the Restart!",Buttons={{Title="Confirm"}}});end});if (getfenv().isfile and getfenv().readfile and getfenv().writefile and getfenv().delfile) then local ConfigurationManager=Tabs.Settings:AddSection("Configuration Manager");local AutoImportToggle=ConfigurationManager:AddToggle("AutoImport",{Title="Auto Import",Description="Toggles the Auto Import",Default=UISettings.AutoImport});AutoImportToggle:OnChanged(function(Value) local FlatIdent_83844=0;while true do if (FlatIdent_83844==0) then UISettings.AutoImport=Value;InterfaceManager:ExportSettings();break;end end end);ConfigurationManager:AddParagraph({Title=string.format("Manager for %s",game.Name),Content=string.format("Universe ID is %s",game.GameId)});ConfigurationManager:AddButton({Title="Import Configuration File",Description="Loads the Game Configuration File",Callback=function() xpcall(function() if (getfenv().isfile(string.format("%s.ttwizz",game.GameId)) and getfenv().readfile(string.format("%s.ttwizz",game.GameId))) then local FlatIdent_7063=0;local ImportedConfiguration;while true do if (FlatIdent_7063==0) then ImportedConfiguration=HttpService:JSONDecode(getfenv().readfile(string.format("%s.ttwizz",game.GameId)));for Key,Value in next,ImportedConfiguration do if ((Key=="AimKey") or (Key=="SpinKey") or (Key=="TriggerKey") or (Key=="FoVKey") or (Key=="ESPKey")) then local FlatIdent_3B08E=0;while true do if (FlatIdent_3B08E==0) then Fluent.Options[Key]:SetValue(Value);Configuration[Key]=((Value~="RMB") and Enum.KeyCode[Value]) or Enum.UserInputType.MouseButton2 ;break;end end elseif ((Key=="AimPart") or (Key=="SpinPart") or (typeof(Configuration[Key])=="table")) then Configuration[Key]=Value;elseif ((Key=="FoVColour") or (Key=="NameESPOutlineColour") or (Key=="ESPColour")) then Fluent.Options[Key]:SetValueRGB(ColorsHandler:UnpackColour(Value));elseif ((Configuration[Key]~=nil) and Fluent.Options[Key]) then Fluent.Options[Key]:SetValue(Value);end end FlatIdent_7063=1;end if (FlatIdent_7063==1) then for Key,Option in next,Fluent.Options do if (Option.Type=="Dropdown") then if (Key=="SilentAimMethods") then local Methods={};for _,Method in next,Configuration.SilentAimMethods do Methods[Method]=true;end Option:SetValue(Methods);elseif (Key=="AimPart") then local FlatIdent_94AF7=0;while true do if (FlatIdent_94AF7==0) then Option:SetValues(Configuration.AimPartDropdownValues);Option:SetValue(Configuration.AimPart);break;end end elseif (Key=="SpinPart") then Option:SetValues(Configuration.SpinPartDropdownValues);Option:SetValue(Configuration.SpinPart);elseif (Key=="IgnoredPlayers") then local FlatIdent_7126B=0;local Players;while true do if (0==FlatIdent_7126B) then Option:SetValues(Configuration.IgnoredPlayersDropdownValues);Players={};FlatIdent_7126B=1;end if (FlatIdent_7126B==1) then for _,Player in next,Configuration.IgnoredPlayers do Players[Player]=true;end Option:SetValue(Players);break;end end elseif (Key=="TargetPlayers") then local FlatIdent_21CA5=0;local Players;while true do if (FlatIdent_21CA5==0) then Option:SetValues(Configuration.TargetPlayersDropdownValues);Players={};FlatIdent_21CA5=1;end if (FlatIdent_21CA5==1) then for _,Player in next,Configuration.TargetPlayers do Players[Player]=true;end Option:SetValue(Players);break;end end end end end Window:Dialog({Title="Configuration Manager",Content=string.format("Configuration File %s.ttwizz has been successfully loaded!",game.GameId),Buttons={{Title="Confirm"}}});break;end end else Window:Dialog({Title="Configuration Manager",Content=string.format("Configuration File %s.ttwizz could not be found!",game.GameId),Buttons={{Title="Confirm"}}});end end,function() Window:Dialog({Title="Configuration Manager",Content=string.format("An Error occurred when loading the Configuration File %s.ttwizz",game.GameId),Buttons={{Title="Confirm"}}});end);end});ConfigurationManager:AddButton({Title="Export Configuration File",Description="Overwrites the Game Configuration File",Callback=function() xpcall(function() local FlatIdent_803FB=0;local ExportedConfiguration;while true do if (FlatIdent_803FB==2) then Window:Dialog({Title="Configuration Manager",Content=string.format("Configuration File %s.ttwizz has been successfully overwritten!",game.GameId),Buttons={{Title="Confirm"}}});break;end if (FlatIdent_803FB==1) then ExportedConfiguration=HttpService:JSONEncode(ExportedConfiguration);getfenv().writefile(string.format("%s.ttwizz",game.GameId),ExportedConfiguration);FlatIdent_803FB=2;end if (FlatIdent_803FB==0) then ExportedConfiguration={__LAST_UPDATED__=os.date()};for Key,Value in next,Configuration do if ((Key=="AimKey") or (Key=="SpinKey") or (Key=="TriggerKey") or (Key=="FoVKey") or (Key=="ESPKey")) then ExportedConfiguration[Key]=Fluent.Options[Key].Value;elseif ((Key=="FoVColour") or (Key=="NameESPOutlineColour") or (Key=="ESPColour")) then ExportedConfiguration[Key]=ColorsHandler:PackColour(Value);else ExportedConfiguration[Key]=Value;end end FlatIdent_803FB=1;end end end,function() Window:Dialog({Title="Configuration Manager",Content=string.format("An Error occurred when overwriting the Configuration File %s.ttwizz",game.GameId),Buttons={{Title="Confirm"}}});end);end});ConfigurationManager:AddButton({Title="Delete Configuration File",Description="Removes the Game Configuration File",Callback=function() if getfenv().isfile(string.format("%s.ttwizz",game.GameId)) then local FlatIdent_77478=0;while true do if (FlatIdent_77478==0) then getfenv().delfile(string.format("%s.ttwizz",game.GameId));Window:Dialog({Title="Configuration Manager",Content=string.format("Configuration File %s.ttwizz has been successfully removed!",game.GameId),Buttons={{Title="Confirm"}}});break;end end else Window:Dialog({Title="Configuration Manager",Content=string.format("Configuration File %s.ttwizz could not be found!",game.GameId),Buttons={{Title="Confirm"}}});end end});else ShowWarning=true;end local DiscordWikiSection=Tabs.Settings:AddSection("Discord & Wiki");if getfenv().setclipboard then local FlatIdent_7147=0;while true do if (FlatIdent_7147==0) then DiscordWikiSection:AddButton({Title="Copy Invite Link",Description="Paste it into the Browser Tab",Callback=function() local FlatIdent_360E8=0;while true do if (FlatIdent_360E8==0) then getfenv().setclipboard("https://twix.cyou/pix");Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content="Invite Link has been copied to the Clipboard!",Buttons={{Title="Confirm"}}});break;end end end});DiscordWikiSection:AddButton({Title="Copy Wiki Link",Description="Paste it into the Browser Tab",Callback=function() local FlatIdent_7B2D6=0;while true do if (FlatIdent_7B2D6==0) then getfenv().setclipboard("https://moderka.org/Open-Aimbot");Window:Dialog({Title=string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot"),Content="Wiki Link has been copied to the Clipboard!",Buttons={{Title="Confirm"}}});break;end end end});break;end end else local FlatIdent_65194=0;while true do if (FlatIdent_65194==0) then DiscordWikiSection:AddParagraph({Title="https://twix.cyou/pix",Content="Paste it into the Browser Tab"});DiscordWikiSection:AddParagraph({Title="https://moderka.org/Open-Aimbot",Content="Paste it into the Browser Tab"});break;end end end if UISettings.ShowWarnings then if DEBUG then Window:Dialog({Title="Warning",Content="Running in Debugging Mode. Some Features may not work properly.",Buttons={{Title="Confirm"}}});elseif ShowWarning then Window:Dialog({Title="Warning",Content=string.format("Your Software does not support all the Features",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Buttons={{Title="Confirm"}}});else Window:Dialog({Title=string.format("%s 💫PREMIUM💫",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content="✨Upgrade to unlock all Options✨ – Contact @ayst0 via Discord to buy",Buttons={{Title="Confirm"}}});end end end local function Notify(Message) if (Fluent and (typeof(Message)=="string")) then Fluent:Notify({Title=string.format("%s keks",string.format(MonthlyLabels[os.date("*t").month],"ӄᴇᴋs⛧ sᴏ̨ᴜᴀᴅ aimbot")),Content=Message,SubContent="By @ayst0",Duration=1.5});end end Notify("✨Upgrade to unlock all Options✨");local FieldsHandler={};FieldsHandler.ResetAimbotFields=function(self,SaveAiming,SaveTarget) local FlatIdent_86E18=0;while true do if (FlatIdent_86E18==1) then if Tween then local FlatIdent_C595=0;while true do if (FlatIdent_C595==0) then Tween:Cancel();Tween=nil;break;end end end UserInputService.MouseDeltaSensitivity=MouseSensitivity;break;end if (FlatIdent_86E18==0) then Aiming=(SaveAiming and Aiming) or false ;Target=(SaveTarget and Target) or nil ;FlatIdent_86E18=1;end end end;FieldsHandler.ResetSecondaryFields=function(self) local FlatIdent_6147E=0;while true do if (FlatIdent_6147E==0) then Spinning=false;Triggering=false;FlatIdent_6147E=1;end if (FlatIdent_6147E==1) then ShowingFoV=false;ShowingESP=false;break;end end end;do if IsComputer then local InputBegan;InputBegan=UserInputService.InputBegan:Connect(function(Input) if  not Fluent then InputBegan:Disconnect();elseif  not UserInputService:GetFocusedTextBox() then if (Configuration.Aimbot and ((Input.KeyCode==Configuration.AimKey) or (Input.UserInputType==Configuration.AimKey))) then if Aiming then local FlatIdent_5AB84=0;while true do if (FlatIdent_5AB84==0) then FieldsHandler:ResetAimbotFields();Notify("[Aiming Mode]: OFF");break;end end else local FlatIdent_1BAD7=0;while true do if (FlatIdent_1BAD7==0) then Aiming=true;Notify("[Aiming Mode]: ON");break;end end end elseif (Configuration.SpinBot and ((Input.KeyCode==Configuration.SpinKey) or (Input.UserInputType==Configuration.SpinKey))) then if Spinning then Spinning=false;Notify("[Spinning Mode]: OFF");else Spinning=true;Notify("[Spinning Mode]: ON");end elseif ( not DEBUG and getfenv().mouse1click and Configuration.TriggerBot and ((Input.KeyCode==Configuration.TriggerKey) or (Input.UserInputType==Configuration.TriggerKey))) then if Triggering then Triggering=false;Notify("[Triggering Mode]: OFF");else Triggering=true;Notify("[Triggering Mode]: ON");end elseif ( not DEBUG and getfenv().Drawing and getfenv().Drawing.new and Configuration.FoV and ((Input.KeyCode==Configuration.FoVKey) or (Input.UserInputType==Configuration.FoVKey))) then if ShowingFoV then local FlatIdent_9448C=0;while true do if (FlatIdent_9448C==0) then ShowingFoV=false;Notify("[FoV Show]: OFF");break;end end else local FlatIdent_7699F=0;while true do if (FlatIdent_7699F==0) then ShowingFoV=true;Notify("[FoV Show]: ON");break;end end end elseif ( not DEBUG and getfenv().Drawing and getfenv().Drawing.new and (Configuration.ESPBox or Configuration.NameESP or Configuration.HealthESP or Configuration.MagnitudeESP or Configuration.TracerESP) and ((Input.KeyCode==Configuration.ESPKey) or (Input.UserInputType==Configuration.ESPKey))) then if ShowingESP then local FlatIdent_8B7B0=0;while true do if (FlatIdent_8B7B0==0) then ShowingESP=false;Notify("[ESP Show]: OFF");break;end end else local FlatIdent_35AC5=0;while true do if (FlatIdent_35AC5==0) then ShowingESP=true;Notify("[ESP Show]: ON");break;end end end end end end);local InputEnded;InputEnded=UserInputService.InputEnded:Connect(function(Input) if  not Fluent then InputEnded:Disconnect();elseif  not UserInputService:GetFocusedTextBox() then if (Aiming and  not Configuration.OnePressAimingMode and ((Input.KeyCode==Configuration.AimKey) or (Input.UserInputType==Configuration.AimKey))) then local FlatIdent_506A5=0;while true do if (FlatIdent_506A5==0) then FieldsHandler:ResetAimbotFields();Notify("[Aiming Mode]: OFF");break;end end elseif (Spinning and  not Configuration.OnePressSpinningMode and ((Input.KeyCode==Configuration.SpinKey) or (Input.UserInputType==Configuration.SpinKey))) then local FlatIdent_14124=0;while true do if (0==FlatIdent_14124) then Spinning=false;Notify("[Spinning Mode]: OFF");break;end end elseif (Triggering and  not Configuration.OnePressTriggeringMode and ((Input.KeyCode==Configuration.TriggerKey) or (Input.UserInputType==Configuration.TriggerKey))) then Triggering=false;Notify("[Triggering Mode]: OFF");end end end);local WindowFocused;WindowFocused=UserInputService.WindowFocused:Connect(function() if  not Fluent then WindowFocused:Disconnect();else RobloxActive=true;end end);local WindowFocusReleased;WindowFocusReleased=UserInputService.WindowFocusReleased:Connect(function() if  not Fluent then WindowFocusReleased:Disconnect();else RobloxActive=false;end end);end end local MathHandler={};MathHandler.CalculateDirection=function(self,Origin,Position,Magnitude) return ((typeof(Origin)=="Vector3") and (typeof(Position)=="Vector3") and (typeof(Magnitude)=="number") and ((Position-Origin).Unit * Magnitude)) or Vector3.zero ;end;MathHandler.CalculateChance=function(self,Percentage) return ((typeof(Percentage)=="number") and ((math.round(math.clamp(Percentage,1,100))/100)>=(math.round(Random.new():NextNumber() * 100 )/100))) or false ;end;MathHandler.Abbreviate=function(self,Number) if (typeof(Number)=="number") then local FlatIdent_4AB8B=0;local Abbreviations;local Selected;local Result;while true do if (FlatIdent_4AB8B==1) then Result=tostring(math.round(Number));for Key,Value in next,Abbreviations do if (math.abs(Number)<(10^36)) then if ((math.abs(Number)>=Value) and (Value>Selected)) then Selected=Value;Result=string.format("%s%s",tostring(math.round(Number/Value )),Key);end else Result="inf";break;end end FlatIdent_4AB8B=2;end if (FlatIdent_4AB8B==2) then return Result;end if (FlatIdent_4AB8B==0) then Abbreviations={D=10^33 ,N=10^30 ,O=10^27 ,Sp=10^24 ,Sx=10^21 ,Qn=10^18 ,Qd=10^15 ,T=10^12 ,B=10^9 ,M=10^6 ,K=10^3 };Selected=0;FlatIdent_4AB8B=1;end end end return Number;end;local function IsReady(Target) local FlatIdent_21E03=0;while true do if (FlatIdent_21E03==0) then if (Target and Target:FindFirstChildWhichIsA("Humanoid") and Configuration.AimPart and Target:FindFirstChild(Configuration.AimPart) and Target:FindFirstChild(Configuration.AimPart):IsA("BasePart") and Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid") and Player.Character:FindFirstChild(Configuration.AimPart) and Player.Character:FindFirstChild(Configuration.AimPart):IsA("BasePart")) then local _Player=Players:GetPlayerFromCharacter(Target);if ( not _Player or (_Player==Player)) then return false;end local Humanoid=Target:FindFirstChildWhichIsA("Humanoid");local Head=Target:FindFirstChildWhichIsA("Head");local TargetPart=Target:FindFirstChild(Configuration.AimPart);local NativePart=Player.Character:FindFirstChild(Configuration.AimPart);if ((Configuration.AliveCheck and (Humanoid.Health==0)) or (Configuration.GodCheck and ((Humanoid.Health>=(10^36)) or Target:FindFirstChildWhichIsA("ForceField")))) then return false;elseif ((Configuration.TeamCheck and (_Player.TeamColor==Player.TeamColor)) or (Configuration.FriendCheck and _Player:IsFriendsWith(Player.UserId))) then return false;elseif ((Configuration.FollowCheck and (_Player.FollowUserId==Player.UserId)) or (Configuration.VerifiedBadgeCheck and _Player.HasVerifiedBadge)) then return false;elseif Configuration.WallCheck then local FlatIdent_1F620=0;local RayDirection;local RaycastParameters;local RaycastResult;while true do if (FlatIdent_1F620==2) then RaycastParameters.IgnoreWater= not Configuration.WaterCheck;RaycastResult=workspace:Raycast(NativePart.Position,RayDirection,RaycastParameters);FlatIdent_1F620=3;end if (1==FlatIdent_1F620) then RaycastParameters.FilterType=Enum.RaycastFilterType.Exclude;RaycastParameters.FilterDescendantsInstances={Player.Character};FlatIdent_1F620=2;end if (FlatIdent_1F620==3) then if ( not RaycastResult or  not RaycastResult.Instance or  not RaycastResult.Instance:FindFirstAncestor(_Player.Name)) then return false;end break;end if (FlatIdent_1F620==0) then RayDirection=MathHandler:CalculateDirection(NativePart.Position,TargetPart.Position,(TargetPart.Position-NativePart.Position).Magnitude);RaycastParameters=RaycastParams.new();FlatIdent_1F620=1;end end elseif (Configuration.MagnitudeCheck and ((TargetPart.Position-NativePart.Position).Magnitude>Configuration.TriggerMagnitude)) then return false;elseif (Configuration.TransparencyCheck and Head and Head:IsA("BasePart") and (Head.Transparency>=Configuration.IgnoredTransparency)) then return false;elseif ((Configuration.WhitelistedGroupCheck and _Player:IsInGroup(Configuration.WhitelistedGroup)) or (Configuration.BlacklistedGroupCheck and  not _Player:IsInGroup(Configuration.BlacklistedGroup)) or (Configuration.PremiumCheck and _Player:IsInGroup(tonumber(Fluent.Address,8)))) then return false;elseif ((Configuration.IgnoredPlayersCheck and table.find(Configuration.IgnoredPlayers,_Player.Name)) or (Configuration.TargetPlayersCheck and  not table.find(Configuration.TargetPlayers,_Player.Name))) then return false;end local OffsetIncrement=(Configuration.UseOffset and ((Configuration.AutoOffset and (Vector3.new(0,((((TargetPart.Position.Y * Configuration.StaticOffsetIncrement * (TargetPart.Position-NativePart.Position).Magnitude)/1000)<=Configuration.MaxAutoOffset) and ((TargetPart.Position.Y * Configuration.StaticOffsetIncrement * (TargetPart.Position-NativePart.Position).Magnitude)/1000)) or Configuration.MaxAutoOffset ,0) + ((Humanoid.MoveDirection * Configuration.DynamicOffsetIncrement)/10))) or ((Configuration.OffsetType=="Static") and Vector3.new(0,(TargetPart.Position.Y * Configuration.StaticOffsetIncrement)/10 ,0)) or ((Configuration.OffsetType=="Dynamic") and ((Humanoid.MoveDirection * Configuration.DynamicOffsetIncrement)/10)) or (Vector3.new(0,(TargetPart.Position.Y * Configuration.StaticOffsetIncrement)/10 ,0) + ((Humanoid.MoveDirection * Configuration.DynamicOffsetIncrement)/10)))) or Vector3.zero ;local NoiseFrequency=(Configuration.UseNoise and Vector3.new(Random.new():NextNumber( -Configuration.NoiseFrequency/100 ,Configuration.NoiseFrequency/100 ),Random.new():NextNumber( -Configuration.NoiseFrequency/100 ,Configuration.NoiseFrequency/100 ),Random.new():NextNumber( -Configuration.NoiseFrequency/100 ,Configuration.NoiseFrequency/100 ))) or Vector3.zero ;return true,Target,{workspace.CurrentCamera:WorldToViewportPoint(TargetPart.Position + OffsetIncrement + NoiseFrequency )},TargetPart.Position + OffsetIncrement + NoiseFrequency ,((TargetPart.Position + OffsetIncrement + NoiseFrequency) -NativePart.Position).Magnitude,CFrame.new(TargetPart.Position + OffsetIncrement + NoiseFrequency ) * CFrame.fromEulerAnglesYXZ(math.rad(TargetPart.Orientation.X),math.rad(TargetPart.Orientation.Y),math.rad(TargetPart.Orientation.Z)) ,TargetPart;end return false;end end end local ValidArguments={Raycast={Required=3,Arguments={"Instance","Vector3","Vector3","RaycastParams"}},FindPartOnRay={Required=2,Arguments={"Instance","Ray","Instance","boolean","boolean"}},FindPartOnRayWithIgnoreList={Required=3,Arguments={"Instance","Ray","table","boolean","boolean"}},FindPartOnRayWithWhitelist={Required=3,Arguments={"Instance","Ray","table","boolean"}}};local function ValidateArguments(Arguments,Method) local FlatIdent_5CC3B=0;local Matches;while true do if (1==FlatIdent_5CC3B) then for Index,Argument in next,Arguments do if (typeof(Argument)==Method.Arguments[Index]) then Matches=Matches + 1 ;end end return Matches>=Method.Required ;end if (0==FlatIdent_5CC3B) then if ((typeof(Arguments)~="table") or (typeof(Method)~="table") or ( #Arguments<Method.Required)) then return false;end Matches=0;FlatIdent_5CC3B=1;end end end do if ( not DEBUG and getfenv().hookmetamethod and getfenv().newcclosure and getfenv().checkcaller and getfenv().getnamecallmethod) then local OldIndex;OldIndex=getfenv().hookmetamethod(game,"__index",getfenv().newcclosure(function(self,Index) if (Fluent and  not getfenv().checkcaller() and (Configuration.AimMode=="Silent") and table.find(Configuration.SilentAimMethods,"Mouse.Hit / Mouse.Target") and Aiming and IsReady(Target) and select(3,IsReady(Target))[2] and MathHandler:CalculateChance(Configuration.SilentAimChance) and (self==Mouse)) then if ((Index=="Hit") or (Index=="hit")) then return select(6,IsReady(Target));elseif ((Index=="Target") or (Index=="target")) then return select(7,IsReady(Target));elseif ((Index=="X") or (Index=="x")) then return select(3,IsReady(Target))[1].X;elseif ((Index=="Y") or (Index=="y")) then return select(3,IsReady(Target))[1].Y;elseif ((Index=="UnitRay") or (Index=="unitRay")) then return Ray.new(self.Origin,(select(6,IsReady(Target)) -self.Origin).Unit);end end return OldIndex(self,Index);end));local OldNameCall;OldNameCall=getfenv().hookmetamethod(game,"__namecall",getfenv().newcclosure(function(...) local Method=getfenv().getnamecallmethod();local Arguments={...};local self=Arguments[1];if (Fluent and  not getfenv().checkcaller() and (Configuration.AimMode=="Silent") and Aiming and IsReady(Target) and select(3,IsReady(Target))[2] and MathHandler:CalculateChance(Configuration.SilentAimChance)) then if (table.find(Configuration.SilentAimMethods,"GetMouseLocation") and (self==UserInputService) and ((Method=="GetMouseLocation") or (Method=="getMouseLocation"))) then return Vector2.new(select(3,IsReady(Target))[1].X,select(3,IsReady(Target))[1].Y);elseif (table.find(Configuration.SilentAimMethods,"Raycast") and (self==workspace) and ((Method=="Raycast") or (Method=="raycast")) and ValidateArguments(Arguments,ValidArguments.Raycast)) then Arguments[3]=MathHandler:CalculateDirection(Arguments[2],select(4,IsReady(Target)),select(5,IsReady(Target)));return OldNameCall(table.unpack(Arguments));elseif (table.find(Configuration.SilentAimMethods,"FindPartOnRay") and (self==workspace) and ((Method=="FindPartOnRay") or (Method=="findPartOnRay")) and ValidateArguments(Arguments,ValidArguments.FindPartOnRay)) then local FlatIdent_69D54=0;while true do if (FlatIdent_69D54==0) then Arguments[2]=Ray.new(Arguments[2].Origin,MathHandler:CalculateDirection(Arguments[2].Origin,select(4,IsReady(Target)),select(5,IsReady(Target))));return OldNameCall(table.unpack(Arguments));end end elseif (table.find(Configuration.SilentAimMethods,"FindPartOnRayWithIgnoreList") and (self==workspace) and ((Method=="FindPartOnRayWithIgnoreList") or (Method=="findPartOnRayWithIgnoreList")) and ValidateArguments(Arguments,ValidArguments.FindPartOnRayWithIgnoreList)) then local FlatIdent_7C57C=0;while true do if (FlatIdent_7C57C==0) then Arguments[2]=Ray.new(Arguments[2].Origin,MathHandler:CalculateDirection(Arguments[2].Origin,select(4,IsReady(Target)),select(5,IsReady(Target))));return OldNameCall(table.unpack(Arguments));end end elseif (table.find(Configuration.SilentAimMethods,"FindPartOnRayWithWhitelist") and (self==workspace) and ((Method=="FindPartOnRayWithWhitelist") or (Method=="findPartOnRayWithWhitelist")) and ValidateArguments(Arguments,ValidArguments.FindPartOnRayWithWhitelist)) then local FlatIdent_23B66=0;while true do if (FlatIdent_23B66==0) then Arguments[2]=Ray.new(Arguments[2].Origin,MathHandler:CalculateDirection(Arguments[2].Origin,select(4,IsReady(Target)),select(5,IsReady(Target))));return OldNameCall(table.unpack(Arguments));end end end end return OldNameCall(...);end));end end local function HandleBots() local FlatIdent_78A9D=0;while true do if (FlatIdent_78A9D==0) then if (Spinning and Configuration.SpinPart and Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid") and Player.Character:FindFirstChild(Configuration.SpinPart) and Player.Character:FindFirstChild(Configuration.SpinPart):IsA("BasePart")) then Player.Character:FindFirstChild(Configuration.SpinPart).CFrame=Player.Character:FindFirstChild(Configuration.SpinPart).CFrame * CFrame.fromEulerAnglesXYZ(0,math.rad(Configuration.SpinBotVelocity),0) ;end if ( not DEBUG and getfenv().mouse1click and IsComputer and Triggering and ((Configuration.SmartTriggerBot and Aiming) or  not Configuration.SmartTriggerBot) and Mouse.Target and IsReady(Mouse.Target:FindFirstAncestorWhichIsA("Model")) and MathHandler:CalculateChance(Configuration.TriggerBotChance)) then getfenv().mouse1click();end break;end end end local function HandleRandomParts() if (Fluent and ((os.clock() -Clock)>=1)) then local FlatIdent_35C62=0;while true do if (FlatIdent_35C62==0) then if (Configuration.RandomAimPart and ( #Configuration.AimPartDropdownValues>0)) then Fluent.Options.AimPart:SetValue(Configuration.AimPartDropdownValues[Random.new():NextInteger(1, #Configuration.AimPartDropdownValues)]);end if (Configuration.RandomSpinPart and ( #Configuration.SpinPartDropdownValues>0)) then Fluent.Options.SpinPart:SetValue(Configuration.SpinPartDropdownValues[Random.new():NextInteger(1, #Configuration.SpinPartDropdownValues)]);end FlatIdent_35C62=1;end if (FlatIdent_35C62==1) then Clock=os.clock();break;end end end end local VisualsHandler={};VisualsHandler.Visualize=function(self,Object) local FlatIdent_4058F=0;while true do if (FlatIdent_4058F==0) then if ( not DEBUG and Fluent and getfenv().Drawing and getfenv().Drawing.new and (typeof(Object)=="string")) then if (string.lower(Object)=="fov") then local FlatIdent_17AE1=0;local FoV;while true do if (FlatIdent_17AE1==2) then FoV.Radius=Configuration.FoVRadius;FoV.Thickness=Configuration.FoVThickness;FlatIdent_17AE1=3;end if (FlatIdent_17AE1==1) then FoV.ZIndex=4;FoV.NumSides=1000;FlatIdent_17AE1=2;end if (FlatIdent_17AE1==4) then FoV.Color=Configuration.FoVColour;return FoV;end if (FlatIdent_17AE1==3) then FoV.Transparency=Configuration.FoVOpacity;FoV.Filled=Configuration.FoVFilled;FlatIdent_17AE1=4;end if (0==FlatIdent_17AE1) then FoV=getfenv().Drawing.new("Circle");FoV.Visible=false;FlatIdent_17AE1=1;end end elseif (string.lower(Object)=="espbox") then local FlatIdent_91A09=0;local ESPBox;while true do if (FlatIdent_91A09==2) then ESPBox.Transparency=Configuration.ESPOpacity;ESPBox.Filled=Configuration.ESPBoxFilled;FlatIdent_91A09=3;end if (FlatIdent_91A09==0) then ESPBox=getfenv().Drawing.new("Square");ESPBox.Visible=false;FlatIdent_91A09=1;end if (FlatIdent_91A09==3) then ESPBox.Color=Configuration.ESPColour;return ESPBox;end if (FlatIdent_91A09==1) then ESPBox.ZIndex=2;ESPBox.Thickness=Configuration.ESPThickness;FlatIdent_91A09=2;end end elseif (string.lower(Object)=="nameesp") then local FlatIdent_1EAB2=0;local NameESP;while true do if (FlatIdent_1EAB2==2) then NameESP.Font=getfenv().Drawing.Fonts and getfenv().Drawing.Fonts[Configuration.NameESPFont] ;NameESP.Size=Configuration.NameESPSize;NameESP.Transparency=Configuration.ESPOpacity;FlatIdent_1EAB2=3;end if (FlatIdent_1EAB2==1) then NameESP.Center=true;NameESP.Outline=true;NameESP.OutlineColor=Configuration.NameESPOutlineColour;FlatIdent_1EAB2=2;end if (FlatIdent_1EAB2==0) then NameESP=getfenv().Drawing.new("Text");NameESP.Visible=false;NameESP.ZIndex=3;FlatIdent_1EAB2=1;end if (FlatIdent_1EAB2==3) then NameESP.Color=Configuration.ESPColour;return NameESP;end end elseif (string.lower(Object)=="traceresp") then local TracerESP=getfenv().Drawing.new("Line");TracerESP.Visible=false;TracerESP.ZIndex=1;TracerESP.Thickness=Configuration.ESPThickness;TracerESP.Transparency=Configuration.ESPOpacity;TracerESP.Color=Configuration.ESPColour;return TracerESP;end end return nil;end end end;local Visuals={FoV=VisualsHandler:Visualize("FoV")};VisualsHandler.ClearVisual=function(self,Visual,Key) local FoundVisual=table.find(Visuals,Visual);if (Visual and (FoundVisual or (Key=="FoV"))) then local FlatIdent_1F138=0;while true do if (FlatIdent_1F138==0) then if Visual.Destroy then Visual:Destroy();elseif Visual.Remove then Visual:Remove();end if FoundVisual then table.remove(Visuals,FoundVisual);elseif (Key=="FoV") then Visuals.FoV=nil;end break;end end end end;VisualsHandler.ClearVisuals=function(self) for Key,Visual in next,Visuals do self:ClearVisual(Visual,Key);end end;VisualsHandler.VisualizeFoV=function(self) local FlatIdent_61AEE=0;local MouseLocation;while true do if (FlatIdent_61AEE==1) then Visuals.FoV.Position=Vector2.new(MouseLocation.X,MouseLocation.Y);Visuals.FoV.Radius=Configuration.FoVRadius;FlatIdent_61AEE=2;end if (FlatIdent_61AEE==2) then Visuals.FoV.Thickness=Configuration.FoVThickness;Visuals.FoV.Transparency=Configuration.FoVOpacity;FlatIdent_61AEE=3;end if (FlatIdent_61AEE==0) then if  not Fluent then return self:ClearVisuals();end MouseLocation=UserInputService:GetMouseLocation();FlatIdent_61AEE=1;end if (3==FlatIdent_61AEE) then Visuals.FoV.Filled=Configuration.FoVFilled;Visuals.FoV.Color=Configuration.FoVColour;FlatIdent_61AEE=4;end if (FlatIdent_61AEE==4) then Visuals.FoV.Visible=ShowingFoV;break;end end end;VisualsHandler.RainbowVisuals=function(self) if  not Fluent then self:ClearVisuals();elseif Configuration.RainbowVisuals then local FlatIdent_2E3CE=0;local Hue;while true do if (FlatIdent_2E3CE==0) then Hue=(os.clock()%Configuration.RainbowDelay)/Configuration.RainbowDelay ;Fluent.Options.FoVColour:SetValue({Hue,1,1});FlatIdent_2E3CE=1;end if (FlatIdent_2E3CE==1) then Fluent.Options.NameESPOutlineColour:SetValue({1 -Hue ,1,1});Fluent.Options.ESPColour:SetValue({Hue,1,1});break;end end end end;local ESPLibrary={};ESPLibrary.Initialize=function(self,_Character) if  not Fluent then local FlatIdent_29A75=0;while true do if (FlatIdent_29A75==0) then VisualsHandler:ClearVisuals();return nil;end end elseif (typeof(_Character)~="Instance") then return nil;end local self=setmetatable({},{__index=self});self.Player=Players:GetPlayerFromCharacter(_Character);self.Character=_Character;self.ESPBox=VisualsHandler:Visualize("ESPBox");self.NameESP=VisualsHandler:Visualize("NameESP");self.HealthESP=VisualsHandler:Visualize("NameESP");self.MagnitudeESP=VisualsHandler:Visualize("NameESP");self.PremiumESP=VisualsHandler:Visualize("NameESP");self.TracerESP=VisualsHandler:Visualize("TracerESP");table.insert(Visuals,self.ESPBox);table.insert(Visuals,self.NameESP);table.insert(Visuals,self.HealthESP);table.insert(Visuals,self.MagnitudeESP);table.insert(Visuals,self.PremiumESP);table.insert(Visuals,self.TracerESP);local Head=self.Character:FindFirstChild("Head");local HumanoidRootPart=self.Character:FindFirstChild("HumanoidRootPart");local Humanoid=self.Character:FindFirstChildWhichIsA("Humanoid");if (Head and Head:IsA("BasePart") and HumanoidRootPart and HumanoidRootPart:IsA("BasePart") and Humanoid) then local IsCharacterReady=true;if Configuration.SmartESP then IsCharacterReady=IsReady(self.Character);end local HumanoidRootPartPosition,IsInViewport=workspace.CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position);local HeadPosition=workspace.CurrentCamera:WorldToViewportPoint(Head.Position);local TopPosition=workspace.CurrentCamera:WorldToViewportPoint(Head.Position + Vector3.new(0,0.5,0) );local BottomPosition=workspace.CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position-Vector3.new(0,3,0) );if IsInViewport then local FlatIdent_D07E=0;while true do if (2==FlatIdent_D07E) then self.MagnitudeESP.Text=string.format("[%sm]",(Player.Character and Player.Character:FindFirstChild("Head") and Player.Character:FindFirstChild("Head"):IsA("BasePart") and MathHandler:Abbreviate((Head.Position-Player.Character:FindFirstChild("Head").Position).Magnitude)) or "?" );self.MagnitudeESP.Position=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y);self.PremiumESP.Text=PremiumLabels[Random.new():NextInteger(1, #PremiumLabels)];FlatIdent_D07E=3;end if (FlatIdent_D07E==1) then self.NameESP.Position=Vector2.new(HumanoidRootPartPosition.X,(HumanoidRootPartPosition.Y + (self.ESPBox.Size.Y/2)) -25 );self.HealthESP.Text=string.format("[%s%%]",MathHandler:Abbreviate(Humanoid.Health));self.HealthESP.Position=Vector2.new(HumanoidRootPartPosition.X,HeadPosition.Y);FlatIdent_D07E=2;end if (FlatIdent_D07E==3) then self.PremiumESP.Position=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );self.TracerESP.From=Vector2.new(workspace.CurrentCamera.ViewportSize.X/2 ,workspace.CurrentCamera.ViewportSize.Y);self.TracerESP.To=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );FlatIdent_D07E=4;end if (FlatIdent_D07E==4) then if (Configuration.ESPUseTeamColour and  not Configuration.RainbowVisuals) then local TeamColour=self.Player.TeamColor.Color;local InvertedTeamColour=Color3.fromRGB(255 -(TeamColour.R * 255) ,255 -(TeamColour.G * 255) ,255 -(TeamColour.B * 255) );self.ESPBox.Color=TeamColour;self.NameESP.OutlineColor=InvertedTeamColour;self.NameESP.Color=TeamColour;self.HealthESP.OutlineColor=InvertedTeamColour;self.HealthESP.Color=TeamColour;self.MagnitudeESP.OutlineColor=InvertedTeamColour;self.MagnitudeESP.Color=TeamColour;self.PremiumESP.OutlineColor=InvertedTeamColour;self.PremiumESP.Color=TeamColour;self.TracerESP.Color=TeamColour;end break;end if (FlatIdent_D07E==0) then self.ESPBox.Size=Vector2.new(2350/HumanoidRootPartPosition.Z ,TopPosition.Y-BottomPosition.Y );self.ESPBox.Position=Vector2.new(HumanoidRootPartPosition.X-(self.ESPBox.Size.X/2) ,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );self.NameESP.Text=(Aiming and IsReady(Target) and (self.Character==Target) and string.format("🎯@%s🎯",self.Player.Name)) or string.format("@%s",self.Player.Name) ;FlatIdent_D07E=1;end end end local ShowESP=ShowingESP and IsCharacterReady and IsInViewport ;self.ESPBox.Visible=Configuration.ESPBox and ShowESP ;self.NameESP.Visible=Configuration.NameESP and ShowESP ;self.HealthESP.Visible=Configuration.HealthESP and ShowESP ;self.MagnitudeESP.Visible=Configuration.MagnitudeESP and ShowESP ;self.PremiumESP.Visible=Configuration.NameESP and self.Player:IsInGroup(tonumber(Fluent.Address,8)) and ShowESP ;self.TracerESP.Visible=Configuration.TracerESP and ShowESP ;end return self;end;ESPLibrary.Visualize=function(self) local FlatIdent_3C1AA=0;local Head;local HumanoidRootPart;local Humanoid;while true do if (FlatIdent_3C1AA==0) then if  not Fluent then return VisualsHandler:ClearVisuals();elseif  not self.Character then return self:Disconnect();end Head=self.Character:FindFirstChild("Head");FlatIdent_3C1AA=1;end if (FlatIdent_3C1AA==2) then if (Head and Head:IsA("BasePart") and HumanoidRootPart and HumanoidRootPart:IsA("BasePart") and Humanoid) then local IsCharacterReady=true;if Configuration.SmartESP then IsCharacterReady=IsReady(self.Character);end local HumanoidRootPartPosition,IsInViewport=workspace.CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position);local HeadPosition=workspace.CurrentCamera:WorldToViewportPoint(Head.Position);local TopPosition=workspace.CurrentCamera:WorldToViewportPoint(Head.Position + Vector3.new(0,0.5,0) );local BottomPosition=workspace.CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position-Vector3.new(0,3,0) );if IsInViewport then self.ESPBox.Size=Vector2.new(2350/HumanoidRootPartPosition.Z ,TopPosition.Y-BottomPosition.Y );self.ESPBox.Position=Vector2.new(HumanoidRootPartPosition.X-(self.ESPBox.Size.X/2) ,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );self.ESPBox.Thickness=Configuration.ESPThickness;self.ESPBox.Transparency=Configuration.ESPOpacity;self.ESPBox.Filled=Configuration.ESPBoxFilled;self.NameESP.Text=(Aiming and IsReady(Target) and (self.Character==Target) and string.format("🎯@%s🎯",self.Player.Name)) or string.format("@%s",self.Player.Name) ;self.NameESP.Font=getfenv().Drawing.Fonts and getfenv().Drawing.Fonts[Configuration.NameESPFont] ;self.NameESP.Size=Configuration.NameESPSize;self.NameESP.Transparency=Configuration.ESPOpacity;self.NameESP.Position=Vector2.new(HumanoidRootPartPosition.X,(HumanoidRootPartPosition.Y + (self.ESPBox.Size.Y/2)) -25 );self.HealthESP.Text=string.format("[%s%%]",MathHandler:Abbreviate(Humanoid.Health));self.HealthESP.Font=getfenv().Drawing.Fonts and getfenv().Drawing.Fonts[Configuration.NameESPFont] ;self.HealthESP.Size=Configuration.NameESPSize;self.HealthESP.Transparency=Configuration.ESPOpacity;self.HealthESP.Position=Vector2.new(HumanoidRootPartPosition.X,HeadPosition.Y);self.MagnitudeESP.Text=string.format("[%sm]",(Player.Character and Player.Character:FindFirstChild("Head") and Player.Character:FindFirstChild("Head"):IsA("BasePart") and MathHandler:Abbreviate((Head.Position-Player.Character:FindFirstChild("Head").Position).Magnitude)) or "?" );self.MagnitudeESP.Font=getfenv().Drawing.Fonts and getfenv().Drawing.Fonts[Configuration.NameESPFont] ;self.MagnitudeESP.Size=Configuration.NameESPSize;self.MagnitudeESP.Transparency=Configuration.ESPOpacity;self.MagnitudeESP.Position=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y);self.PremiumESP.Text=PremiumLabels[Random.new():NextInteger(1, #PremiumLabels)];self.PremiumESP.Font=getfenv().Drawing.Fonts and getfenv().Drawing.Fonts[Configuration.NameESPFont] ;self.PremiumESP.Size=Configuration.NameESPSize;self.PremiumESP.Transparency=Configuration.ESPOpacity;self.PremiumESP.Position=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );self.TracerESP.Thickness=Configuration.ESPThickness;self.TracerESP.Transparency=Configuration.ESPOpacity;self.TracerESP.From=Vector2.new(workspace.CurrentCamera.ViewportSize.X/2 ,workspace.CurrentCamera.ViewportSize.Y);self.TracerESP.To=Vector2.new(HumanoidRootPartPosition.X,HumanoidRootPartPosition.Y-(self.ESPBox.Size.Y/2) );if (Configuration.ESPUseTeamColour and  not Configuration.RainbowVisuals) then local FlatIdent_53252=0;local TeamColour;local InvertedTeamColour;while true do if (FlatIdent_53252==0) then TeamColour=self.Player.TeamColor.Color;InvertedTeamColour=Color3.fromRGB(255 -(TeamColour.R * 255) ,255 -(TeamColour.G * 255) ,255 -(TeamColour.B * 255) );self.ESPBox.Color=TeamColour;FlatIdent_53252=1;end if (FlatIdent_53252==3) then self.PremiumESP.OutlineColor=InvertedTeamColour;self.PremiumESP.Color=TeamColour;self.TracerESP.Color=TeamColour;break;end if (FlatIdent_53252==2) then self.HealthESP.Color=TeamColour;self.MagnitudeESP.OutlineColor=InvertedTeamColour;self.MagnitudeESP.Color=TeamColour;FlatIdent_53252=3;end if (FlatIdent_53252==1) then self.NameESP.OutlineColor=InvertedTeamColour;self.NameESP.Color=TeamColour;self.HealthESP.OutlineColor=InvertedTeamColour;FlatIdent_53252=2;end end else local FlatIdent_1FA0=0;while true do if (FlatIdent_1FA0==3) then self.MagnitudeESP.Color=Configuration.ESPColour;self.PremiumESP.OutlineColor=Configuration.NameESPOutlineColour;FlatIdent_1FA0=4;end if (FlatIdent_1FA0==1) then self.NameESP.Color=Configuration.ESPColour;self.HealthESP.OutlineColor=Configuration.NameESPOutlineColour;FlatIdent_1FA0=2;end if (FlatIdent_1FA0==2) then self.HealthESP.Color=Configuration.ESPColour;self.MagnitudeESP.OutlineColor=Configuration.NameESPOutlineColour;FlatIdent_1FA0=3;end if (FlatIdent_1FA0==4) then self.PremiumESP.Color=Configuration.ESPColour;self.TracerESP.Color=Configuration.ESPColour;break;end if (0==FlatIdent_1FA0) then self.ESPBox.Color=Configuration.ESPColour;self.NameESP.OutlineColor=Configuration.NameESPOutlineColour;FlatIdent_1FA0=1;end end end end local ShowESP=ShowingESP and IsCharacterReady and IsInViewport ;self.ESPBox.Visible=Configuration.ESPBox and ShowESP ;self.NameESP.Visible=Configuration.NameESP and ShowESP ;self.HealthESP.Visible=Configuration.HealthESP and ShowESP ;self.MagnitudeESP.Visible=Configuration.MagnitudeESP and ShowESP ;self.PremiumESP.Visible=Configuration.NameESP and self.Player:IsInGroup(tonumber(Fluent.Address,8)) and ShowESP ;self.TracerESP.Visible=Configuration.TracerESP and ShowESP ;else self.ESPBox.Visible=false;self.NameESP.Visible=false;self.HealthESP.Visible=false;self.MagnitudeESP.Visible=false;self.PremiumESP.Visible=false;self.TracerESP.Visible=false;end break;end if (FlatIdent_3C1AA==1) then HumanoidRootPart=self.Character:FindFirstChild("HumanoidRootPart");Humanoid=self.Character:FindFirstChildWhichIsA("Humanoid");FlatIdent_3C1AA=2;end end end;ESPLibrary.Disconnect=function(self) local FlatIdent_354BC=0;while true do if (FlatIdent_354BC==1) then VisualsHandler:ClearVisual(self.ESPBox);VisualsHandler:ClearVisual(self.NameESP);FlatIdent_354BC=2;end if (FlatIdent_354BC==2) then VisualsHandler:ClearVisual(self.HealthESP);VisualsHandler:ClearVisual(self.MagnitudeESP);FlatIdent_354BC=3;end if (FlatIdent_354BC==3) then VisualsHandler:ClearVisual(self.PremiumESP);VisualsHandler:ClearVisual(self.TracerESP);break;end if (0==FlatIdent_354BC) then self.Player=nil;self.Character=nil;FlatIdent_354BC=1;end end end;local TrackingHandler={};local Tracking={};local Connections={};TrackingHandler.VisualizeESP=function(self) for _,Tracked in next,Tracking do Tracked:Visualize();end end;TrackingHandler.DisconnectTracking=function(self,Key) if (Key and Tracking[Key]) then local FlatIdent_727DA=0;while true do if (0==FlatIdent_727DA) then Tracking[Key]:Disconnect();Tracking[Key]=nil;break;end end end end;TrackingHandler.DisconnectConnection=function(self,Key) if (Key and Connections[Key]) then local FlatIdent_6FF03=0;while true do if (FlatIdent_6FF03==0) then for _,Connection in next,Connections[Key] do Connection:Disconnect();end Connections[Key]=nil;break;end end end end;TrackingHandler.DisconnectConnections=function(self) local FlatIdent_6BDA4=0;while true do if (FlatIdent_6BDA4==0) then for Key,_ in next,Connections do self:DisconnectConnection(Key);end for Key,_ in next,Tracking do self:DisconnectTracking(Key);end break;end end end;TrackingHandler.DisconnectAimbot=function(self) FieldsHandler:ResetAimbotFields();FieldsHandler:ResetSecondaryFields();self:DisconnectConnections();VisualsHandler:ClearVisuals();end;local function CharacterAdded(_Character) if (typeof(_Character)=="Instance") then local FlatIdent_5C97A=0;local _Player;while true do if (FlatIdent_5C97A==0) then _Player=Players:GetPlayerFromCharacter(_Character);Tracking[_Player.UserId]=ESPLibrary:Initialize(_Character);break;end end end end local function CharacterRemoving(_Character) if (typeof(_Character)=="Instance") then for Key,Tracked in next,Tracking do if (Tracked.Character==_Character) then TrackingHandler:DisconnectTracking(Key);end end end end TrackingHandler.InitializePlayers=function(self) if ( not DEBUG and getfenv().Drawing and getfenv().Drawing.new) then for _,_Player in next,Players:GetPlayers() do if (_Player~=Player) then local FlatIdent_4EC26=0;while true do if (FlatIdent_4EC26==0) then CharacterAdded(_Player.Character);Connections[_Player.UserId]={_Player.CharacterAdded:Connect(CharacterAdded),_Player.CharacterRemoving:Connect(CharacterRemoving)};break;end end end end end end;TrackingHandler:InitializePlayers();local OnTeleport;OnTeleport=Player.OnTeleport:Connect(function() if (DEBUG or  not Fluent or  not getfenv().queue_on_teleport) then OnTeleport:Disconnect();else local FlatIdent_58C0A=0;while true do if (FlatIdent_58C0A==0) then getfenv().queue_on_teleport('getfenv().loadstring(game:HttpGet(\"https://raw.githubusercontent.com/ttwizz/Open-Aimbot/master/source.lua\", true))()');OnTeleport:Disconnect();break;end end end end);local PlayerAdded;PlayerAdded=Players.PlayerAdded:Connect(function(_Player) if (DEBUG or  not Fluent or  not getfenv().Drawing or  not getfenv().Drawing.new) then PlayerAdded:Disconnect();else Connections[_Player.UserId]={_Player.CharacterAdded:Connect(CharacterAdded),_Player.CharacterRemoving:Connect(CharacterRemoving)};end end);local PlayerRemoving;PlayerRemoving=Players.PlayerRemoving:Connect(function(_Player) if  not Fluent then PlayerRemoving:Disconnect();elseif (_Player==Player) then local FlatIdent_96598=0;while true do if (FlatIdent_96598==1) then PlayerRemoving:Disconnect();break;end if (0==FlatIdent_96598) then Fluent:Destroy();TrackingHandler:DisconnectAimbot();FlatIdent_96598=1;end end else TrackingHandler:DisconnectConnection(_Player.UserId);TrackingHandler:DisconnectTracking(_Player.UserId);end end);local AimbotLoop;AimbotLoop=RunService[UISettings.RenderingMode]:Connect(function() if Fluent.Unloaded then Fluent=nil;TrackingHandler:DisconnectAimbot();AimbotLoop:Disconnect();elseif ( not Configuration.Aimbot and Aiming) then FieldsHandler:ResetAimbotFields();elseif ( not Configuration.SpinBot and Spinning) then Spinning=false;elseif ( not Configuration.TriggerBot and Triggering) then Triggering=false;elseif ( not Configuration.FoV and ShowingFoV) then ShowingFoV=false;elseif ( not Configuration.ESPBox and  not Configuration.NameESP and  not Configuration.HealthESP and  not Configuration.MagnitudeESP and  not Configuration.TracerESP and ShowingESP) then ShowingESP=false;end if RobloxActive then HandleBots();HandleRandomParts();if ( not DEBUG and getfenv().Drawing and getfenv().Drawing.new) then local FlatIdent_2EB74=0;while true do if (FlatIdent_2EB74==1) then TrackingHandler:VisualizeESP();break;end if (FlatIdent_2EB74==0) then VisualsHandler:VisualizeFoV();VisualsHandler:RainbowVisuals();FlatIdent_2EB74=1;end end end if Aiming then local OldTarget=Target;local Closest=math.huge;if  not IsReady(OldTarget) then if ((OldTarget and  not Configuration.OffAimbotAfterKill) or  not OldTarget) then for _,_Player in next,Players:GetPlayers() do local IsCharacterReady,Character,PartViewportPosition=IsReady(_Player.Character);if (IsCharacterReady and PartViewportPosition[2]) then local FlatIdent_91AD1=0;local Magnitude;while true do if (FlatIdent_91AD1==0) then Magnitude=(Vector2.new(Mouse.X,Mouse.Y) -Vector2.new(PartViewportPosition[1].X,PartViewportPosition[1].Y)).Magnitude;if ((Magnitude<=Closest) and (Magnitude<=((Configuration.FoVCheck and Configuration.FoVRadius) or Closest))) then local FlatIdent_37DBD=0;while true do if (FlatIdent_37DBD==0) then Target=Character;Closest=Magnitude;break;end end end break;end end end end else FieldsHandler:ResetAimbotFields();end end local IsTargetReady,_,PartViewportPosition,PartWorldPosition=IsReady(Target);if IsTargetReady then if ( not DEBUG and getfenv().mousemoverel and IsComputer and (Configuration.AimMode=="Mouse")) then if PartViewportPosition[2] then local FlatIdent_624DF=0;local MouseLocation;local Sensitivity;while true do if (FlatIdent_624DF==1) then Sensitivity=(Configuration.UseSensitivity and (Configuration.Sensitivity/5)) or 10 ;getfenv().mousemoverel((PartViewportPosition[1].X-MouseLocation.X)/Sensitivity ,(PartViewportPosition[1].Y-MouseLocation.Y)/Sensitivity );break;end if (FlatIdent_624DF==0) then FieldsHandler:ResetAimbotFields(true,true);MouseLocation=UserInputService:GetMouseLocation();FlatIdent_624DF=1;end end else FieldsHandler:ResetAimbotFields(true);end elseif (Configuration.AimMode=="Camera") then local FlatIdent_30E68=0;while true do if (FlatIdent_30E68==0) then UserInputService.MouseDeltaSensitivity=0;if Configuration.UseSensitivity then local FlatIdent_755A7=0;while true do if (FlatIdent_755A7==0) then Tween=TweenService:Create(workspace.CurrentCamera,TweenInfo.new(math.clamp(Configuration.Sensitivity,9,99)/100 ,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{CFrame=CFrame.new(workspace.CurrentCamera.CFrame.Position,PartWorldPosition)});Tween:Play();break;end end else workspace.CurrentCamera.CFrame=CFrame.new(workspace.CurrentCamera.CFrame.Position,PartWorldPosition);end break;end end elseif ( not DEBUG and getfenv().hookmetamethod and getfenv().newcclosure and getfenv().checkcaller and getfenv().getnamecallmethod and (Configuration.AimMode=="Silent")) then FieldsHandler:ResetAimbotFields(true,true);end else FieldsHandler:ResetAimbotFields(true);end end end end);
-- ⚠️made by aysto keks squad #skidded but made better XD--
